{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/report-zero-to-one/",
    "result": {"data":{"cur":{"id":"7d937d92-ba75-5a15-97f5-c5060cc971bf","html":"<h1 id=\"스타트업-창업-현실과-이상의-괴리감-어떻게-메꾸어갈-것인가\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85-%EC%B0%BD%EC%97%85-%ED%98%84%EC%8B%A4%EA%B3%BC-%EC%9D%B4%EC%83%81%EC%9D%98-%EA%B4%B4%EB%A6%AC%EA%B0%90-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%A9%94%EA%BE%B8%EC%96%B4%EA%B0%88-%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-label=\"스타트업 창업 현실과 이상의 괴리감 어떻게 메꾸어갈 것인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타트업 창업, 현실과 이상의 괴리감 어떻게 메꾸어갈 것인가?</h1>\n<p>스타트업에 관심이 많아 이번에 트레바리 독서모임에 참여하게되어 독후감을 작성해본다.</p>\n<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHhrzvdYFQ00T2gK0nPF6MsRsXNOVzqHIBqZDrOTNaSQJwA7gL52UzUWMVTcLQdA7ZdaY&amp;usqp=CAU\" style=\"display: block; margin:30px auto; width:90%;\">\n<br>\n<h3 id=\"책을-읽기전\" style=\"position:relative;\"><a href=\"#%EC%B1%85%EC%9D%84-%EC%9D%BD%EA%B8%B0%EC%A0%84\" aria-label=\"책을 읽기전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>책을 읽기전</h3>\n<p>이테까지 철없는 저의 생각으로는 실력있고 저와 뜻이 맞는 사람들과 합심하여 스타트업을 창업하면 잘되지 않을까? 성공하지 않을까? 라고 생각을 하였습니다.</p>\n<p>하지만, 이 책을 읽으면서 정말 안일한 생각이었구나라고 많이 느꼇습니다.</p>\n<br>\n<h3 id=\"zero에서-one으로\" style=\"position:relative;\"><a href=\"#zero%EC%97%90%EC%84%9C-one%EC%9C%BC%EB%A1%9C\" aria-label=\"zero에서 one으로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Zero에서 One으로</h3>\n<p>비즈니스 모델을 다른 비즈니스를 모방하여 서비스를 만드는 것이 아니라 zero 에서 one 즉 진보한 비즈니스가 성공할 수 있다는 점 입니다.</p>\n<p>그렇게 진보한 비즈니스를 선보이는 회사를 이끌어 나가고, 많은 사용자들에게 새로운 경험을 선사해주어야 회사가 무한한 성장할 수 있을 것입니다.</p>\n<br>\n<h3 id=\"비즈니스와-세일즈\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4%EC%99%80-%EC%84%B8%EC%9D%BC%EC%A6%88\" aria-label=\"비즈니스와 세일즈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스와 세일즈</h3>\n<p>사용자들에게 새로운 기술을 이용하여 좀더 편리하고 문제를 해소 할 수 있는 제품을 만들어 서비스한다면 회사가 당연히 잘되지 않을까? 라고 생각 했습니다.</p>\n<p>그리고 좋은 기술만 추구했지 사람들에게 우리가만든 제품을 판매할 수 있는 세일즈라는 영역은 마음 한켠으로는 무시했던 것 같습니다.</p>\n<p>하지만, 우리가 좋은 제품을 만드는 만큼 사용자들에게 우리의 제품을 쓸 수 있도록 설득할 수 있는 노력 또한 필요하다는 것을 깨달았습니다.</p>\n<br>\n<h3 id=\"마지막으로\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C\" aria-label=\"마지막으로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로</h3>\n<p>제가 글을 잘 못쓰는 이번 기회를 통해 책을 읽고 글을 쓰는 경험을 해본것이 저를 조금 더 성장해보고 되돌아볼 수 있는 계기가된 것 같고,</p>\n<p>창업이라는 막연함 꿈에서 벗어나 하나씩 하나씩 창업에대한 플랜을 가져볼 수 있는 기회가 되어 유익했습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%B1%85%EC%9D%84-%EC%9D%BD%EA%B8%B0%EC%A0%84\">책을 읽기전</a></li>\n<li><a href=\"#zero%EC%97%90%EC%84%9C-one%EC%9C%BC%EB%A1%9C\">Zero에서 One으로</a></li>\n<li><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4%EC%99%80-%EC%84%B8%EC%9D%BC%EC%A6%88\">비즈니스와 세일즈</a></li>\n<li><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C\">마지막으로</a></li>\n</ul>\n</div>","excerpt":"스타트업 창업, 현실과 이상의 괴리감 어떻게 메꾸어갈 것인가? 스타트업에 관심이 많아 이번에 트레바리 독서모임에 참여하게되어 독후감을 작성해본다. 책을 읽기전 이테까지 철없는 저의 생각으로는 실력있고 저와 뜻이 맞는 사람들과 합심하여 스타트업을 창업하면 잘되지 않을까? 성공하지 않을까? 라고 생각을 하였습니다. 하지만, 이 책을 읽으면서 정말 안일한 생각이었구나라고 많이 느꼇습니다. Zero에서 One으로 비즈니스 모델을 다른 비즈니스를 모방하여 서비스를 만드는 것이 아니라 zero 에서 one 즉 진보한 비즈니스가 성공할 수 있다는 점 입니다. 그렇게 진보한 비즈니스를 선보이는 회사를 이끌어 나가고, 많은 사용자들에게 새로운 경험을 선사해주어야 회사가 무한한 성장할 수 있을 것입니다. 비즈니스와 세일즈 사용자들에게 새로운 기술을 이용하여 좀더 편리하고 문제를 해소 할 수 있는 제품을 만들어 서비스한다면 회사가 당연히 잘되지 않을까? 라고 생각 했습니다. 그리고 좋은 기술만 추구했…","frontmatter":{"date":"December 15, 2021","title":"독후감 - Zero to One","categories":"book","author":"Daehwi Kim","emoji":"📖"},"fields":{"slug":"/report-zero-to-one/"}},"next":{"id":"a263a41d-a5d9-5ec5-91c5-a0b7a24651ba","html":"<h2 id=\"1-문장statements-과-표현식expressions\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%9E%A5statements-%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9Dexpressions\" aria-label=\"1 문장statements 과 표현식expressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문장(Statements) 과 표현식(Expressions)</h2>\n<hr>\n<h3 id=\"문장statements\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%A5statements\" aria-label=\"문장statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문장(Statements)</h3>\n<br>\n<blockquote>\n<p>Javascript 에서 문장은 어떤 동작이 일어나도록 작성된 최소한의 <strong>코드덩어리</strong>를 가리킨다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 선언문(문장)</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 할당문(문장)</span>\n\n<span class=\"token comment\">// 문장</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x는 5보다 작다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x는 5와 같거나 크다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 문장</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"표현식\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식</h3>\n<blockquote>\n<p>표현식은 결과적으로 하나의 값이 되는 모든 코드를 가리킨다.</p>\n</blockquote>\n<br>\n<ul>\n<li>\n<p>어떤 하나의 값을 그대로 작성하는 것 → 표현식</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">5</span>  <span class=\"token comment\">// 5</span>\n<span class=\"token string\">'string'</span>  <span class=\"token comment\">// string</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>연산자를 이용한 연산식 → 하나의 값 → 표현식</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span>   <span class=\"token comment\">// 12</span>\n<span class=\"token string\">'I'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'Love'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'Adam'</span>  <span class=\"token comment\">// I Love Adam</span>\n\n<span class=\"token boolean\">true</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span>  <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>선언된 변수를 호출, 객체의 프로퍼티에 접근 → 하나의 값 → 표현식</p>\n<p>⇒ 결국 길이와는 상관없이 결과적으로 하나의 값이 되는 코드를 모두 <strong>표현식</strong>이라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 할당 연산자는 값을 할당하는 동작도 하지만, 할당한 값을 그대로 가지는 표현식이다.</span>\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> language <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> language  <span class=\"token comment\">// object</span>\ntitle  <span class=\"token comment\">// Javascript</span>\nlanguage<span class=\"token punctuation\">.</span>name  <span class=\"token comment\">//Python</span>\nnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><strong>표현식이면서 문장, 문장이면서 표현식</strong>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 할당 연산자는 값을 할당하는 동작도 하지만, 할당한 값을 그대로 가지는 표현식이다.</span>\ntitle <span class=\"token operator\">=</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Python</span>\n\n<span class=\"token comment\">// 함수 호출은 함수를 실행하는 동작도 하지만, 실행한 함수의 리턴 값을 가지는 표현식이다.</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// sayHello 함수의 리턴 값</span>\n\n<span class=\"token comment\">// console.log 메소드는 콘솔에 아규먼트를 출력하는 동작도 하지만, undefined 값을 가지는 표현식이다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"표현식인-문장-vs-표현식이-아닌-문장\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EC%9E%A5-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8%EC%9E%A5\" aria-label=\"표현식인 문장 vs 표현식이 아닌 문장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식인 문장 Vs 표현식이 아닌 문장</h3>\n<blockquote>\n<p>결과적으로 문장은 다시 <strong>표현식인 문장</strong>과, <strong>표현식이 아닌 문장</strong>으로 나눌 수 있고, 이 둘을 구분하는 가장 간단한 방법은 구분하고자 하는 문장을 변수에 할당하거나 어떤 함수의 아규먼트로 전달해보는 것이다.</p>\n</blockquote>\n<p>⇒  <code class=\"language-text\">console.log</code> 메소드의 아규먼트로 <code class=\"language-text\">if</code> 문을 전달하거나 어떤 변수에 <code class=\"language-text\">for</code> 반복문을 할당하게 되면  <strong>Error</strong> 가 발생하게 된다. === 조건문이나 반복문은 값으로 평가되지 않고 오로지 문장으로만 평가되기 때문</p>\n<br>\n<blockquote>\n<p>💡 자바스크립트에서는 특별한 경우를 제외하면 일반적으로 표현식인 문장은 세미콜론(<code class=\"language-text\">;</code>) 으로, 표현식이 아닌 문장은 문장 자체의 코드블록(중괄호 <code class=\"language-text\">{}</code>)로 그 문장의 범위가 구분된다.</p>\n</blockquote>\n</aside>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> arg <span class=\"token keyword\">of</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 동작</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"2-조건-연산자\" style=\"position:relative;\"><a href=\"#2-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"2 조건 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 조건 연산자</h2>\n<hr>\n<h3 id=\"삼항-연산자\" style=\"position:relative;\"><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"삼항 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삼항 연산자</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">조건 ? 조건이 truthy 할 때 표현식 : 조건이 falsy 할 때 표현식;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> con <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> con <span class=\"token operator\">?</span> <span class=\"token string\">'Adam'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Eve</span></code></pre></div>\n</li>\n<li>\n<p>Python</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">con <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span> <span class=\"token keyword\">if</span> con <span class=\"token keyword\">else</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"3--spread-구문\" style=\"position:relative;\"><a href=\"#3--spread-%EA%B5%AC%EB%AC%B8\" aria-label=\"3  spread 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.  Spread 구문</h2>\n<hr>\n<blockquote>\n<p>여러개의 값을 묶은 하나의 배열을 각각의 개별 값으로 펼치는 문법</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>numbers<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//  1 2 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//  1 2 3</span>\n\n<span class=\"token keyword\">const</span> numbers1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> numbers2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>numbers1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>numbers2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// [1, 2, 3, 4]</span>\n\n<span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noa'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>members<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// {0: 'adam', 1: 'eve', 2: 'noa'} -> index가 키값으로 담김</span></code></pre></div>\n<br>\n<h3 id=\"객체-spread\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-spread\" aria-label=\"객체 spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 Spread</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span>\n    from<span class=\"token operator\">:</span> <span class=\"token string\">'South of Korea'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> spreadObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sister<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token comment\">// 객체를 복사해서 spread 할 수 있다.</span>\n    <span class=\"token operator\">...</span>newObj\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>spreadObj<span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">// {sister: true, name: 'adam', age: 30, sex: 'male', from: 'South of Korea'}</span></code></pre></div>\n<br>\n<h3 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h3>\n<ul>\n<li>\n<p>Spread 구문을 사용해서 새로운 배열을 만든다거나 함수의 아규먼트로 사용할 수는 없다.</p>\n<p>⇒ <strong>객체 spread</strong>  할때는 반드시 <strong>객체를 표현하는 중괄호 안에서</strong> 활용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> latte <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  esspresso<span class=\"token operator\">:</span> <span class=\"token string\">'30ml'</span><span class=\"token punctuation\">,</span>\n  milk<span class=\"token operator\">:</span> <span class=\"token string\">'150ml'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cafeMocha <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>latte<span class=\"token punctuation\">,</span>\n  chocolate<span class=\"token operator\">:</span> <span class=\"token string\">'20ml'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>latte<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>cafeMocha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"모던한-프로퍼티-표기법\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%98%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%91%9C%EA%B8%B0%EB%B2%95\" aria-label=\"모던한 프로퍼티 표기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모던한 프로퍼티 표기법</h2>\n<hr>\n<ul>\n<li>\n<p>키값이 변수이름 또는 함수이름과 같다면 생략이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 모던한 프로퍼티 표기법</span>\n<span class=\"token keyword\">const</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'Daehwi'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> <span class=\"token string\">'Kim'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">firstName<span class=\"token punctuation\">,</span> lastName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> firstName<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token operator\">:</span> lastName<span class=\"token punctuation\">,</span>\n  getFullName<span class=\"token operator\">:</span> getFullName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>                                                                                  ⬇️</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">,</span>\n  getFullName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n  <br>\n</li>\n<li>\n<p>계산된 속성명 (computed property name)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 표현식의 값을 대괄호[]로 감싸주면 property name으로 사용할 수 있다. </span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">[</span>표현식<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> 값<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> propertyName <span class=\"token operator\">=</span> <span class=\"token string\">'BirthDay'</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> adam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'my'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">1992</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'DaeHwi Kim'</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>adam<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// {myage: 30, BirthDay: 1992, Name: 'DaeHwi Kim'}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"옵셔널-체이닝-optional-chaining\" style=\"position:relative;\"><a href=\"#%EC%98%B5%EC%85%94%EB%84%90-%EC%B2%B4%EC%9D%B4%EB%8B%9D-optional-chaining\" aria-label=\"옵셔널 체이닝 optional chaining permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>옵셔널 체이닝 (Optional Chaining)</h3>\n<blockquote>\n<p>일반적으로 객체의 프로퍼티는 점표기법을 통해서 접근하게되는데, ECMAScript2020에서 등장한 <strong>옵셔널 체이닝</strong>을 이용하여 간단하게 객체의 프로퍼티에 접근할 수 있다.</p>\n</blockquote>\n<ul>\n<li>\n<p>옵셔널 체이닝 연산자( <code class=\"language-text\">?</code> )</p>\n</li>\n<li>\n<p><code class=\"language-text\">?</code> 연산자의 왼편의 프로퍼티 값이 <code class=\"language-text\">null</code> 혹은 <code class=\"language-text\">undefined</code> 값이 아니라면 그다음 프로퍼티 값을 리턴,</p>\n<p>그렇지 않다면 <code class=\"language-text\">undefined</code> 를 반환</p>\n</li>\n<li>\n<p>객체의 프로퍼티에 접근할 때 없는 객체를 접근할 때 Error 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>dog<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span>\n  dog<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Moon'</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Moon</span>\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user2<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// TypeError: Cannot read properties of undefined (reading 'name')</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>위의 에러를 옵셔널 체이닝(Optional Chaining) 방식과 null 병합 연산자를이용하여 에러 없이 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>dog<span class=\"token operator\">?.</span>name <span class=\"token operator\">??</span> <span class=\"token string\">'반려견이 없습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span>\n  dog<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Moon'</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Moon</span>\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user2<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 반려견이 없습니다.</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"5-구조-분해-destructuring\" style=\"position:relative;\"><a href=\"#5-%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4-destructuring\" aria-label=\"5 구조 분해 destructuring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 구조 분해 (Destructuring)</h2>\n<hr>\n<blockquote>\n<p>배열이나 객체를 분해하는 문법</p>\n</blockquote>\n<h3 id=\"1-배열\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EC%97%B4\" aria-label=\"1 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배열</h3>\n<ul>\n<li>\n<p>일반적인 배열을 변수에 할당하는 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'노홍철'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> macbook <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 유재석</span>\n<span class=\"token keyword\">const</span> iphone <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 정준하</span>\n<span class=\"token keyword\">const</span> applewatch <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 정형돈</span>\n<span class=\"token keyword\">const</span> airpods <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 하하</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">Destructuring</code>  문법을 이용해서 변수에 할당 (배열을 분해해서 할당)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'노홍철'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>macbook<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> applewatch<span class=\"token punctuation\">,</span> airpods<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>macbook<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>applewatch<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정형돈</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>airpods<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 하하</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 배열의 형식이 아니거나 아무것도 할당하지 않으면 Error가 난다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>macbook<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> applewatch<span class=\"token punctuation\">,</span> airpods<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// SyntaxError</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>macbook<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> applewatch<span class=\"token punctuation\">,</span> airpods<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// SyntaxError</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>할당 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'노홍철'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>others<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>others<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['정형돈', '하하', '노홍철']</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">undefined</code> : 선언된 배열의 갯수가 할당하는 변수보다 적을 경우 할당되는 변수는 <code class=\"language-text\">undefined</code> 로 할당</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>기본 값을 정하여 할당할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> other <span class=\"token operator\">=</span> <span class=\"token string\">'other'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span> <span class=\"token comment\">// other</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>변수를 교환하여 할당할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> mac <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> win <span class=\"token operator\">=</span> <span class=\"token string\">'Eve'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Adam</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Eve</span>\n\n<span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> win<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>win<span class=\"token punctuation\">,</span> mac<span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Eve</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Adam</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"2-객체-분해\" style=\"position:relative;\"><a href=\"#2-%EA%B0%9D%EC%B2%B4-%EB%B6%84%ED%95%B4\" aria-label=\"2 객체 분해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 객체 분해</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'HP Desktop'</span><span class=\"token punctuation\">,</span>\n  price<span class=\"token operator\">:</span> <span class=\"token number\">700000</span><span class=\"token punctuation\">,</span>\n  memory<span class=\"token operator\">:</span> <span class=\"token string\">'16GB'</span><span class=\"token punctuation\">,</span>\n  storage<span class=\"token operator\">:</span> <span class=\"token string\">'1TB SSD'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 객체의 프로퍼티에 따른 구조분해</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> display<span class=\"token punctuation\">,</span> mouse <span class=\"token operator\">=</span> <span class=\"token string\">'Logitech'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> win\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// HP Desktop</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 700000</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 객체의 없는 프로퍼티는 undefined로 반환</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Logitech -> 기본값으로 선언한 값</span></code></pre></div>\n<br>\n<ul>\n<li>rest parameter 이용 : <code class=\"language-text\">...</code></li>\n<li>객체의 프로퍼티네임 지정하여 할당 : <code class=\"language-text\">title</code> → <code class=\"language-text\">product</code>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> product<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> win\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// HP Desktop</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// {price: 700000, memory: '16GB', storage: '1TB SSD'} </span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>computed property name을 이용한 새로운 변수이름으로 할당</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> propertyName <span class=\"token operator\">=</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> product <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> win\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// HP Desktop</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"3-함수와-destructuring\" style=\"position:relative;\"><a href=\"#3-%ED%95%A8%EC%88%98%EC%99%80-destructuring\" aria-label=\"3 함수와 destructuring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 함수와 Destructuring</h3>\n<ul>\n<li>\n<p>함수의 파라미터가 배열일때 Destructuring</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> third<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>third<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'박명수'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 유재석</span>\n<span class=\"token comment\">// 하하</span>\n<span class=\"token comment\">// 정형돈</span>\n<span class=\"token comment\">// ['정준하', '박명수']</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>함수의 파라미터가 객체일때 Destructuring</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'HP Desktop'</span><span class=\"token punctuation\">,</span>\n  price<span class=\"token operator\">:</span> <span class=\"token number\">700000</span><span class=\"token punctuation\">,</span>\n  memory<span class=\"token operator\">:</span> <span class=\"token string\">'16GB'</span><span class=\"token punctuation\">,</span>\n  storage<span class=\"token operator\">:</span> <span class=\"token string\">'1TB SSD'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printProduct</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> memory <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title: '</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'price: '</span><span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'memory: '</span><span class=\"token punctuation\">,</span> memory<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printProduct</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// title:  HP Desktop</span>\n<span class=\"token comment\">// price:  700000</span>\n<span class=\"token comment\">// memory:  16GB</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"6-에러와-에러-객체\" style=\"position:relative;\"><a href=\"#6-%EC%97%90%EB%9F%AC%EC%99%80-%EC%97%90%EB%9F%AC-%EA%B0%9D%EC%B2%B4\" aria-label=\"6 에러와 에러 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 에러와 에러 객체</h2>\n<hr>\n<blockquote>\n<p>Javascript에서 에러는 에러의 name 과 message로 구분된다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SyntaxError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'문법 에러가 발생했습니다.'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// SyntaxError</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 문법 에러가 발생했습니다.</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'End'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// End</span></code></pre></div>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">throw</code> 키워를 이용한 Error 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SyntaxError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'문법 에러가 발생했습니다.'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// SyntaxError</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 문법 에러가 발생했습니다.</span>\n\n<span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  Uncaught SyntaxError: 문법 에러가 발생했습니다.</span>\n\n<span class=\"token comment\">// Error가 발생하여 console() 실행되지 않는다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'End'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"try-catch-문\" style=\"position:relative;\"><a href=\"#try-catch-%EB%AC%B8\" aria-label=\"try catch 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>try catch 문</h3>\n<ul>\n<li>\n<p>사용법</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 코드</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 에러가 발생했을 떄 동작할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before Error'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'adam'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\n\t\n  name <span class=\"token operator\">=</span> <span class=\"token string\">'eve'</span>  <span class=\"token comment\">// 재할당으로인한 에러발생</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 위의 에러발생으로 실행되지 않는다.</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 위의 에러 발생으로 실행되어짐</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After Error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 에러 발생</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// Error객체 프린트</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Before Error</span>\n<span class=\"token comment\">// adam</span>\n<span class=\"token comment\">// After Error</span>\n<span class=\"token comment\">// TypeError: Assignment to constant variable. (ERROR)</span>\n<span class=\"token comment\">// TypeError: Assignment to constant variable.</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"try-catch-문의-활용\" style=\"position:relative;\"><a href=\"#try-catch-%EB%AC%B8%EC%9D%98-%ED%99%9C%EC%9A%A9\" aria-label=\"try catch 문의 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Try Catch 문의 활용</h3>\n<blockquote>\n<p>Error가 발생하면 프로그램이 중단되지만 try catch문을 이용하여 프로그램의 중단 없이 에러를 다룰 수 있다.</p>\n</blockquote>\n<ul>\n<li>\n<p>에러 발생으로 인한 프로그램 중단</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">members</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> member <span class=\"token keyword\">of</span> members<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> membersA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'혜정'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'지혜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조민'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersA<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 객체를 printRank함수에 아규먼트로 실행하여 Error 발생</span>\n<span class=\"token keyword\">const</span> membersB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'하하'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersB<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 위의 에러발생으로 실행되지 않음</span>\n<span class=\"token keyword\">const</span> membersC <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'길동'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'철민'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조준'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersC<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 혜정</span>\n<span class=\"token comment\">// 지혜</span>\n<span class=\"token comment\">// 조민</span>\n<span class=\"token comment\">// Uncaught TypeError: members is not iterable</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">try catch</code> 문을 이용하여 프로그램 중단 없이 Error Handling</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">members</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> member <span class=\"token keyword\">of</span> members<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> membersA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'혜정'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'지혜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조민'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersA<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> membersB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'하하'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersB<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> membersC <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'길동'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'철민'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조준'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersC<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 혜정</span>\n<span class=\"token comment\">// 지혜</span>\n<span class=\"token comment\">// 조민</span>\n<span class=\"token comment\">// TypeError</span>\n<span class=\"token comment\">// members is not iterable</span>\n<span class=\"token comment\">// 길동</span>\n<span class=\"token comment\">// 철민</span>\n<span class=\"token comment\">// 조준</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">try catch</code> 문은 중괄호 <code class=\"language-text\">{}</code> 안에서만 변수선언이 유효하기 때문에 변수 스코프를 잘 생각해야된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'apple'</span> <span class=\"token comment\">// try 문에서만 title 변수가 유효</span>\n  title <span class=\"token operator\">=</span> <span class=\"token string\">'af'</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Uncaught ReferenceError: title is not defined</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><code class=\"language-text\">try catch</code> 문은 실행이가능한 코드에서만 작동한다.(SyntaxError는 실행이 되기전 에러가 발생되기 때문에 <code class=\"language-text\">try catch</code> 문은 작동되지 않는다)</li>\n<li><strong>예외처리 (Exception Handling)</strong> : 실행 가능한 코드에서 예외처리하는 것</li>\n</ul>\n<br>\n<h3 id=\"finally-문\" style=\"position:relative;\"><a href=\"#finally-%EB%AC%B8\" aria-label=\"finally 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>finally 문</h3>\n<blockquote>\n<p>finally문은 try문에서 에러가 발생해도 발생하지 않아도 항상 실행되는 구문이다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 실행할 코드</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 에러가 발생했을 때 동작 코드</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 항상 실행할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>\n<p>finally문에서 에러가 발생했을 시 에러 처리</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 실행할 코드</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 에러가 발상했을 때 실행할 코드</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 항상 실행할 코드</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// finall문에서 에러가 발생했을 때 실행할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%9E%A5statements-%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9Dexpressions\">1. 문장(Statements) 과 표현식(Expressions)</a></p>\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%9E%A5statements\">문장(Statements)</a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\">표현식</a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EC%9E%A5-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8%EC%9E%A5\">표현식인 문장 Vs 표현식이 아닌 문장</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\">2. 조건 연산자</a></p>\n<ul>\n<li><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90\">삼항 연산자</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3--spread-%EA%B5%AC%EB%AC%B8\">3.  Spread 구문</a></p>\n<ul>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-spread\">객체 Spread</a></li>\n<li><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\">주의 사항</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%8D%98%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%91%9C%EA%B8%B0%EB%B2%95\">모던한 프로퍼티 표기법</a></p>\n<ul>\n<li><a href=\"#%EC%98%B5%EC%85%94%EB%84%90-%EC%B2%B4%EC%9D%B4%EB%8B%9D-optional-chaining\">옵셔널 체이닝 (Optional Chaining)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4-destructuring\">5. 구조 분해 (Destructuring)</a></p>\n<ul>\n<li><a href=\"#1-%EB%B0%B0%EC%97%B4\">1. 배열</a></li>\n<li><a href=\"#2-%EA%B0%9D%EC%B2%B4-%EB%B6%84%ED%95%B4\">2. 객체 분해</a></li>\n<li><a href=\"#3-%ED%95%A8%EC%88%98%EC%99%80-destructuring\">3. 함수와 Destructuring</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-%EC%97%90%EB%9F%AC%EC%99%80-%EC%97%90%EB%9F%AC-%EA%B0%9D%EC%B2%B4\">6. 에러와 에러 객체</a></p>\n<ul>\n<li><a href=\"#try-catch-%EB%AC%B8\">try catch 문</a></li>\n<li><a href=\"#try-catch-%EB%AC%B8%EC%9D%98-%ED%99%9C%EC%9A%A9\">Try Catch 문의 활용</a></li>\n<li><a href=\"#finally-%EB%AC%B8\">finally 문</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 07, 2021","title":"JavaScript - 문장(Statements)과 표현식(Expressions)","categories":"javascript","author":"Daehwi Kim","emoji":"⭐"},"fields":{"slug":"/javascript-statement/"}},"prev":{"id":"322b154f-f7f9-5318-ada4-4e6015aba46b","html":"<blockquote>\n<p>어떻게 하면 주니어 개발자로서 성장할 수 있을까? 더 낫은 개발자가 될 수 있을 까 고민하던 중에 인프런에 그랩님이 강의하신 ‘모든 개발자의 실무를 위한 올인원 기본기 클래스’ 강의가 있어 강의를 듣고 Step by Step 공부하고 정리하는 글을 쓰려고 합니다.</p>\n</blockquote>\n<br>\n<br>\n<h2 id=\"1네이밍\" style=\"position:relative;\"><a href=\"#1%EB%84%A4%EC%9D%B4%EB%B0%8D\" aria-label=\"1네이밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.네이밍</h2>\n<hr>\n<h3 id=\"컨벤션\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%EB%B2%A4%EC%85%98\" aria-label=\"컨벤션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨벤션</h3>\n<ul>\n<li><code class=\"language-text\">snake_case</code> :  Python, Ruby 등에서 권장</li>\n<li><code class=\"language-text\">cameCase</code> :  Java, Javascript 등에서 권장</li>\n<li><code class=\"language-text\">PascalCase</code> : 대부분의 프로그래밍 언어에서 클래스를 네이밍할 때 사용</li>\n<li><code class=\"language-text\">kebab-case</code> : HTML Element를 표현할 때 사용</li>\n</ul>\n<br>\n<h3 id=\"네이밍\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9D%B4%EB%B0%8D\" aria-label=\"네이밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네이밍</h3>\n<ul>\n<li>\n<p>변수 : 명사 혹은 형용사로 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> userData <span class=\"token operator\">=</span> <span class=\"token operator\">...</span> <span class=\"token comment\">// 명사</span>\n<span class=\"token keyword\">const</span> isValid <span class=\"token operator\">=</span> <span class=\"token operator\">...</span> <span class=\"token comment\">// 형용사</span></code></pre></div>\n</li>\n<li>\n<p>함수와 메서드 : 동사 혹은 형용사로 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">inputIsValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>클래스 : 일반적으로 명사로 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> Client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"tip\" style=\"position:relative;\"><a href=\"#tip\" aria-label=\"tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tip</h3>\n<blockquote>\n<p>구체적이고 명시적으로 적을 것, 짧고 애매한 표현보다 길고 직관적인 표현이 낫다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// as-is</span>\n<span class=\"token keyword\">const</span> dt <span class=\"token operator\">=</span> <span class=\"token string\">'20211219KST'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// to-be</span>\n<span class=\"token keyword\">const</span> datetimeWithTimezone <span class=\"token operator\">=</span> <span class=\"token string\">'20211219KST'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"2-주석-포맷팅\" style=\"position:relative;\"><a href=\"#2-%EC%A3%BC%EC%84%9D-%ED%8F%AC%EB%A7%B7%ED%8C%85\" aria-label=\"2 주석 포맷팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 주석, 포맷팅</h2>\n<hr>\n<h3 id=\"2-1-주석\" style=\"position:relative;\"><a href=\"#2-1-%EC%A3%BC%EC%84%9D\" aria-label=\"2 1 주석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 1 주석</h3>\n<blockquote>\n<p>네이밍으로 표현할 수 없는 영역을 주석으로 표현</p>\n</blockquote>\n<ul>\n<li>\n<p>법적인 정보를 담을 때</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Copyright (c) 2021...</span></code></pre></div>\n</li>\n<li>\n<p>의도를 명확하게 설명할 떄</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// throughput을 늘리기 위해 스레드를 10개까지 늘린다.</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> idx <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span> idx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tthread <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span><span class=\"token function\">Thread</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\tthread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>중요성을 강조할 떄</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 최종 결재를 하기 전에 진행해야 하는 validation gkatn</span></code></pre></div>\n</li>\n<li>\n<p>결과를 경고할 떄</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// WARNING: API 서버가 항상 양호한지 알 수 없음</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">connectApiServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"2-2-관용적으로-사용되는-키워드\" style=\"position:relative;\"><a href=\"#2-2-%EA%B4%80%EC%9A%A9%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\"2 2 관용적으로 사용되는 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 2 관용적으로 사용되는 키워드</h3>\n<ul>\n<li><code class=\"language-text\">TODO</code> : 당장은 아니지만 다음에 해야할 때</li>\n<li><code class=\"language-text\">FIXME</code> : 치명적인 에러를 발생하는 코드는 아지미나 수정해야 할 때</li>\n<li><code class=\"language-text\">XXX</code> : 더 생각해볼 필요가 있을 떄</li>\n</ul>\n<br>\n<h3 id=\"2-3-포맷팅\" style=\"position:relative;\"><a href=\"#2-3-%ED%8F%AC%EB%A7%B7%ED%8C%85\" aria-label=\"2 3 포맷팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 3 포맷팅</h3>\n<p><strong>Vertical Formatting</strong></p>\n<ul>\n<li>\n<p>한 파일에 코드를 다 넣지 말고, 개념에 맞게 파일을 나눠서 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// as-is</span>\n<span class=\"token comment\">// store.js에 전부 있음</span>\n<span class=\"token keyword\">const</span> FruitsStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> DesertStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// to-be</span>\n<span class=\"token comment\">// FruitStore.js</span>\n<span class=\"token keyword\">const</span> FruitsStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// DesertStore.js</span>\n<span class=\"token keyword\">const</span> DesertStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>다른 개념의 코드는 Spacing으로 분리</p>\n</li>\n<li>\n<p>비슷한 개념의 코드는 붙여서 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">testUserByProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">const</span>\tproduct <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Product</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tproduct<span class=\"token punctuation\">.</span><span class=\"token function\">setSoldOut</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\tuser<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>    \n<p><strong>Horizontal Formatting</strong></p>\n<ul>\n<li>\n<p>한 줄에 코드를 다 넣기보단 변수 등을 활용해서 가독성 높이기</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// as-is</span>\npersonList<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'adam'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'even'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'noa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// to-be</span>\n<span class=\"token keyword\">const</span> items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'adam'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'even'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'noa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\npersonList<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"3-함수\" style=\"position:relative;\"><a href=\"#3-%ED%95%A8%EC%88%98\" aria-label=\"3 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 함수</h2>\n<hr>\n<h3 id=\"3-1-함수의-역할은-하나만---srp-single-responsibility-principle\" style=\"position:relative;\"><a href=\"#3-1-%ED%95%A8%EC%88%98%EC%9D%98-%EC%97%AD%ED%95%A0%EC%9D%80-%ED%95%98%EB%82%98%EB%A7%8C---srp-single-responsibility-principle\" aria-label=\"3 1 함수의 역할은 하나만   srp single responsibility principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 1 함수의 역할은 하나만 - SRP (Single Responsibility Principle)</h3>\n<ul>\n<li>\n<p>as-is</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> Database <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> email<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'유저 정보를 제대로 입력하세요'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span> \n\t\n\t<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"email\"</span> <span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span> <span class=\"token operator\">:</span> password<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">const</span> database <span class=\"token operator\">=</span> <span class=\"token function\">Database</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">)</span>\n\tdatabase<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">const</span> emailClient <span class=\"token operator\">=</span> <span class=\"token function\">EmailClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\temailClient<span class=\"token punctuation\">.</span><span class=\"token function\">setConfig</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\temailClient<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> <span class=\"token string\">\"회원가입을 축하합니다\"</span><span class=\"token punctuation\">)</span>\n\t\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@faeafaa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'af'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>to-be</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">validateCreateUser</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">buildUser</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">saveUser</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">sendEmail</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">validateCreateUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> email<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'유저 정보를 제대로 입력하세요'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">buildUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"email\"</span><span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"password\"</span><span class=\"token operator\">:</span> password\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">saveUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> database <span class=\"token operator\">=</span> <span class=\"token function\">Database</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql\"</span><span class=\"token punctuation\">)</span>\n  database<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sendEmail</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> emailClient <span class=\"token operator\">=</span> <span class=\"token function\">EmailClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\temailClient<span class=\"token punctuation\">.</span><span class=\"token function\">setConfig</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n\temailClient<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> <span class=\"token string\">\"회원가입을 축하합니다\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"3-2-반복하지-말자---dry-dont-repeat-yourself\" style=\"position:relative;\"><a href=\"#3-2-%EB%B0%98%EB%B3%B5%ED%95%98%EC%A7%80-%EB%A7%90%EC%9E%90---dry-dont-repeat-yourself\" aria-label=\"3 2 반복하지 말자   dry dont repeat yourself permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 2 반복하지 말자 - DRY (Don’t Repeat Yourself)</h3>\n<ul>\n<li>\n<p>as-is</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> email<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'유저 정보를 제대로 입력하세요'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> email<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'유저 정보를 제대로 입력하세요'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>to-be</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">validateCreateUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>email<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> email<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'유저 정보를 제대로 입력하세요'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">validateCreateUser</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">validateCreateUser</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"3-3-파리미터-수는-적게-유지하자\" style=\"position:relative;\"><a href=\"#3-3-%ED%8C%8C%EB%A6%AC%EB%AF%B8%ED%84%B0-%EC%88%98%EB%8A%94-%EC%A0%81%EA%B2%8C-%EC%9C%A0%EC%A7%80%ED%95%98%EC%9E%90\" aria-label=\"3 3 파리미터 수는 적게 유지하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 3 파리미터 수는 적게 유지하자</h3>\n<ul>\n<li>\n<p>as-is</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">User</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">안녕하세요 저의 이름은</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">이고, 나이는 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> Adam <span class=\"token operator\">=</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span> </code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>to-be</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Person</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">User</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">person</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">안녕하세요 저의 이름은</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">이고, 나이는 </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>person<span class=\"token punctuation\">.</span>sex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> 입니다.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> Eve <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eve'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> newUser <span class=\"token operator\">=</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>Eve<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"3-4-사이드-이펙트를-잘-핸들링하자\" style=\"position:relative;\"><a href=\"#3-4-%EC%82%AC%EC%9D%B4%EB%93%9C-%EC%9D%B4%ED%8E%99%ED%8A%B8%EB%A5%BC-%EC%9E%98-%ED%95%B8%EB%93%A4%EB%A7%81%ED%95%98%EC%9E%90\" aria-label=\"3 4 사이드 이펙트를 잘 핸들링하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 4 사이드 이펙트를 잘 핸들링하자</h3>\n<br>\n<blockquote>\n<p>사이드 이펙트(Side Effect)는 함수가 실행됐을 때 함수 이외의 어떤 것들에 변화를 주는 것을 뜻한다. 사이드 이펙트를 잘 다루지 못하면, 예측하지 못하는 문제들이 발생할 수 있다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 사이드 이펙트 X</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getUserInstance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  user <span class=\"token operator\">=</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> user\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 사이드 이펙트 O</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateUserInstance</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">.</span>email <span class=\"token operator\">=</span> <span class=\"token string\">'new email'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 사이드 이펙트 O</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">email<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  user <span class=\"token operator\">=</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">startDBSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 외부 DB Session에 변화를 줄 수 있다.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<p><strong>사이드 이펙트를 잘 핸들링 하는 방법</strong></p>\n<ul>\n<li>코드를 통해 충분히 예측할 수 있도록 네이밍을 잘하는 것이 중요</li>\n<li>update, set 같은 직관적인 prefix를 붙여서 사이드 이펙트가 있을 수 있음을 암시</li>\n</ul>\n<br>\n<ul>\n<li>함수의 사이드 이펙트가 있는 부분과 없는 부분으로 잘 나눠서 관리</li>\n<li>명령(side effect O)과 조회(side effect X) 를 분리하는 <code class=\"language-text\">CQRS</code> 방식이 있다</li>\n</ul>\n<br>\n<ul>\n<li>일반적으로 update를 남발하기 보단 순수 함수 형태로 사용하는 것이 더 직관적이고 에러를 방지할 수 있다.</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>as-is</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> carts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcarts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> product <span class=\"token operator\">=</span> <span class=\"token function\">Product</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">addCart</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>to-be</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> cart <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getAddedCart</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">product</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>cart<span class=\"token punctuation\">,</span> product<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> carts <span class=\"token operator\">=</span> <span class=\"token function\">getAddedCart</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mango'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>carts<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"순수함수란\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%88%98%ED%95%A8%EC%88%98%EB%9E%80\" aria-label=\"순수함수란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순수함수란?</h3>\n<ul>\n<li>어떤 함수에 동일한 인자를 주었을 때 항상 동일한 값을 리턴하는 함수</li>\n<li>외부의 상태를 변경하지 않는 함수</li>\n<li><a href=\"https://jeong-pro.tistory.com/23\">참조 블로그</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1%EB%84%A4%EC%9D%B4%EB%B0%8D\">1.네이밍</a></p>\n<ul>\n<li><a href=\"#%EC%BB%A8%EB%B2%A4%EC%85%98\">컨벤션</a></li>\n<li><a href=\"#%EB%84%A4%EC%9D%B4%EB%B0%8D\">네이밍</a></li>\n<li><a href=\"#tip\">Tip</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%EC%A3%BC%EC%84%9D-%ED%8F%AC%EB%A7%B7%ED%8C%85\">2. 주석, 포맷팅</a></p>\n<ul>\n<li><a href=\"#2-1-%EC%A3%BC%EC%84%9D\">2. 1 주석</a></li>\n<li><a href=\"#2-2-%EA%B4%80%EC%9A%A9%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%ED%82%A4%EC%9B%8C%EB%93%9C\">2. 2 관용적으로 사용되는 키워드</a></li>\n<li><a href=\"#2-3-%ED%8F%AC%EB%A7%B7%ED%8C%85\">2. 3 포맷팅</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-%ED%95%A8%EC%88%98\">3. 함수</a></p>\n<ul>\n<li><a href=\"#3-1-%ED%95%A8%EC%88%98%EC%9D%98-%EC%97%AD%ED%95%A0%EC%9D%80-%ED%95%98%EB%82%98%EB%A7%8C---srp-single-responsibility-principle\">3. 1 함수의 역할은 하나만 - SRP (Single Responsibility Principle)</a></li>\n<li><a href=\"#3-2-%EB%B0%98%EB%B3%B5%ED%95%98%EC%A7%80-%EB%A7%90%EC%9E%90---dry-dont-repeat-yourself\">3. 2 반복하지 말자 - DRY (Don’t Repeat Yourself)</a></li>\n<li><a href=\"#3-3-%ED%8C%8C%EB%A6%AC%EB%AF%B8%ED%84%B0-%EC%88%98%EB%8A%94-%EC%A0%81%EA%B2%8C-%EC%9C%A0%EC%A7%80%ED%95%98%EC%9E%90\">3. 3 파리미터 수는 적게 유지하자</a></li>\n<li><a href=\"#3-4-%EC%82%AC%EC%9D%B4%EB%93%9C-%EC%9D%B4%ED%8E%99%ED%8A%B8%EB%A5%BC-%EC%9E%98-%ED%95%B8%EB%93%A4%EB%A7%81%ED%95%98%EC%9E%90\">3. 4 사이드 이펙트를 잘 핸들링하자</a></li>\n<li><a href=\"#%EC%88%9C%EC%88%98%ED%95%A8%EC%88%98%EB%9E%80\">순수함수란?</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 19, 2021","title":"개발자의 실무를 위한 기본기 - 클린코드","categories":"basics","author":"Daehwi Kim","emoji":"📖"},"fields":{"slug":"/basic-practical-skills-for-developers-one/"}},"site":{"siteMetadata":{"siteUrl":"https://kdh92417.github.io","comments":{"utterances":{"repo":"kdh92417/kdh92417.github.io"}}}}},"pageContext":{"slug":"/report-zero-to-one/","nextSlug":"/javascript-statement/","prevSlug":"/basic-practical-skills-for-developers-one/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}