{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"13efbda9-3b32-57d7-8a7c-bb41f333ff9a","excerpt":"함수를 만드는 방법 함수 선언(Function Declaration) 함수 표현식 (Function Expression) 함수 선언과 함수 표현식의 차이 기명 함수 표현식 (Named Function Expression) 함수 표현식으로 만들 때 선언하는 함수에 이름을 붙일 수 있다. 즉시 실행 함수 IIFE(Immediately Invoked Function Expression )라 한다. 함수 선언과 동시에 즉시 실행되는 함수 즉시 실행 함수의 활용 선언과 동시에 실행이 이뤄지기 때문에 일반적으로 프로그램 초기화 기능에 많이 사용 재사용이 필요없는 일회성 동작을 구성할 때 활용 함수의 리턴값을 바로 변수에 할당할떄 사용 값으로서 함수  에서 함수는 변수나 데이터구조 또는 다른 함수의 파라미터, 리턴값으로 할당되어질 수 있다. ⇒ 일급 함수 (Fisrt Class Function) 이라 한다. 콜백함수 다른 함수의 파라미터로 전달된 함수 고차 함수 함수를 리턴함수에서 리턴된 함수…","fields":{"slug":"/modern-javascript-1/"},"frontmatter":{"categories":"javascript","title":"모던 자바스크립트(2) - 함수 다루기","date":"December 04, 2021"}},"next":{"fields":{"slug":"/modern-javascript-2/"}},"previous":null},{"node":{"id":"20207bf2-233d-560d-87e4-3641c005acc5","excerpt":"모던 자바스크립트의 이해 모던 자바스크립트란? 현시점에 사용하기 적합한 범위 내에서 최신 버전의 표준을 준수하는 자바스크립트 Javascript vs ECMAScript Javascript는 프로그래밍 언어, ECMAScript는 프로그래밍 언어의 표준(모든 스크립트 언어의 표준) Javascript는 ECMAScript를 기반으로 하지만 ECMAScript에 정의된 내용뿐만 아니라, 다른 부가적인 기능도 있다.(ex DOM을 다루는 문법등 - ECMAScript표준화된 문법이아니라 WebIDL에서 표준화된 기술) Javascript의 동작원리 자료형이 유연 Number ( 기본형 ) String ( 기본형 ) Boolean ( 기본형 ) Null ( 기본형 ) undefined ( 기본형 ) Object (참조형) Symbol : 유일한 값을 만들 때 BigInt : 어멍 큰 숫자를 다룰 때 Symbol과 BigInt BigInt  는 자바스크립트에서 아주 큰 정수(Integer…","fields":{"slug":"/modern-javascript-2/"},"frontmatter":{"categories":"javascript","title":"모던 자바스크립트(1) - 자바스크립트의 동작 원리","date":"November 24, 2021"}},"next":{"fields":{"slug":"/contributing-to-the-opensource/"}},"previous":{"fields":{"slug":"/modern-javascript-1/"}}},{"node":{"id":"5a30b99f-388a-53cf-9be3-cfd705f29851","excerpt":"개요 오픈소스 컨트리뷰션 아카데미를 통해 Exporterhub.io 오픈소스 기여해볼 수 있는 기회를 가져봤다. 해당 오픈소스 이슈68번 의 각 들의 어떤 Contents가 저장되어있는지 확인하기 위해 Backend에서 각  들의 를 만들어 에게 보내는 작업을 해보기로했다. 개발환경 세팅 처음에 개발하기 위해 개발환경세팅을 해야했는데, 해당 프로젝트는 총 4개의 컨테이너가 동시에 띄워져 앱을 실행시키는 오픈소스였다. 그때 당시 나는  에 대해 단일 컨테이너를 띄우는 것만해보아서 어떻게 다중 컨테이너를 띄우는 상태에서 개발환경 세팅을 어떻게 해야될지 몰랐다 ㅜ.. 그래서 인프런 강좌에있는 따라하며 배우는 도커와 CI환경 을 결재해서  와 를 공부하였다. 부랴부랴 공부해서 삽질하기를 2주째.. 겨우겨우 로컬과 마운트해서 개발환경세팅해서 실행시켜보았는데, 그저 해당 오픈소스의 Install Guide를 잘 보고 따라하고,  파일내에서 개발할 컨테이너를 로컬과 마운트시켜 으로 실행시키면 …","fields":{"slug":"/contributing-to-the-opensource/"},"frontmatter":{"categories":"review","title":"오픈소스 기여하기 (오픈소스 컨트리뷰터 - Exporterhub.io)","date":"September 27, 2021"}},"next":null,"previous":{"fields":{"slug":"/modern-javascript-2/"}}}],"categories":["All","javascript","review"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}