{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/javascript-statement/",
    "result": {"data":{"cur":{"id":"a263a41d-a5d9-5ec5-91c5-a0b7a24651ba","html":"<h2 id=\"1-문장statements-과-표현식expressions\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%9E%A5statements-%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9Dexpressions\" aria-label=\"1 문장statements 과 표현식expressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문장(Statements) 과 표현식(Expressions)</h2>\n<hr>\n<h3 id=\"문장statements\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%A5statements\" aria-label=\"문장statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문장(Statements)</h3>\n<br>\n<blockquote>\n<p>Javascript 에서 문장은 어떤 동작이 일어나도록 작성된 최소한의 <strong>코드덩어리</strong>를 가리킨다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 선언문(문장)</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 할당문(문장)</span>\n\n<span class=\"token comment\">// 문장</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x는 5보다 작다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x는 5와 같거나 크다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 문장</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"표현식\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식</h3>\n<blockquote>\n<p>표현식은 결과적으로 하나의 값이 되는 모든 코드를 가리킨다.</p>\n</blockquote>\n<br>\n<ul>\n<li>\n<p>어떤 하나의 값을 그대로 작성하는 것 → 표현식</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">5</span>  <span class=\"token comment\">// 5</span>\n<span class=\"token string\">'string'</span>  <span class=\"token comment\">// string</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>연산자를 이용한 연산식 → 하나의 값 → 표현식</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span>   <span class=\"token comment\">// 12</span>\n<span class=\"token string\">'I'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'Love'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'Adam'</span>  <span class=\"token comment\">// I Love Adam</span>\n\n<span class=\"token boolean\">true</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span>  <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>선언된 변수를 호출, 객체의 프로퍼티에 접근 → 하나의 값 → 표현식</p>\n<p>⇒ 결국 길이와는 상관없이 결과적으로 하나의 값이 되는 코드를 모두 <strong>표현식</strong>이라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 할당 연산자는 값을 할당하는 동작도 하지만, 할당한 값을 그대로 가지는 표현식이다.</span>\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> language <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> language  <span class=\"token comment\">// object</span>\ntitle  <span class=\"token comment\">// Javascript</span>\nlanguage<span class=\"token punctuation\">.</span>name  <span class=\"token comment\">//Python</span>\nnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><strong>표현식이면서 문장, 문장이면서 표현식</strong>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 할당 연산자는 값을 할당하는 동작도 하지만, 할당한 값을 그대로 가지는 표현식이다.</span>\ntitle <span class=\"token operator\">=</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Python</span>\n\n<span class=\"token comment\">// 함수 호출은 함수를 실행하는 동작도 하지만, 실행한 함수의 리턴 값을 가지는 표현식이다.</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// sayHello 함수의 리턴 값</span>\n\n<span class=\"token comment\">// console.log 메소드는 콘솔에 아규먼트를 출력하는 동작도 하지만, undefined 값을 가지는 표현식이다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"표현식인-문장-vs-표현식이-아닌-문장\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EC%9E%A5-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8%EC%9E%A5\" aria-label=\"표현식인 문장 vs 표현식이 아닌 문장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식인 문장 Vs 표현식이 아닌 문장</h3>\n<blockquote>\n<p>결과적으로 문장은 다시 <strong>표현식인 문장</strong>과, <strong>표현식이 아닌 문장</strong>으로 나눌 수 있고, 이 둘을 구분하는 가장 간단한 방법은 구분하고자 하는 문장을 변수에 할당하거나 어떤 함수의 아규먼트로 전달해보는 것이다.</p>\n</blockquote>\n<p>⇒  <code class=\"language-text\">console.log</code> 메소드의 아규먼트로 <code class=\"language-text\">if</code> 문을 전달하거나 어떤 변수에 <code class=\"language-text\">for</code> 반복문을 할당하게 되면  <strong>Error</strong> 가 발생하게 된다. === 조건문이나 반복문은 값으로 평가되지 않고 오로지 문장으로만 평가되기 때문</p>\n<br>\n<blockquote>\n<p>💡 자바스크립트에서는 특별한 경우를 제외하면 일반적으로 표현식인 문장은 세미콜론(<code class=\"language-text\">;</code>) 으로, 표현식이 아닌 문장은 문장 자체의 코드블록(중괄호 <code class=\"language-text\">{}</code>)로 그 문장의 범위가 구분된다.</p>\n</blockquote>\n</aside>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> arg <span class=\"token keyword\">of</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 동작</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"2-조건-연산자\" style=\"position:relative;\"><a href=\"#2-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"2 조건 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 조건 연산자</h2>\n<hr>\n<h3 id=\"삼항-연산자\" style=\"position:relative;\"><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"삼항 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삼항 연산자</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">조건 ? 조건이 truthy 할 때 표현식 : 조건이 falsy 할 때 표현식;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> con <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> con <span class=\"token operator\">?</span> <span class=\"token string\">'Adam'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Eve</span></code></pre></div>\n</li>\n<li>\n<p>Python</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">con <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span> <span class=\"token keyword\">if</span> con <span class=\"token keyword\">else</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"3--spread-구문\" style=\"position:relative;\"><a href=\"#3--spread-%EA%B5%AC%EB%AC%B8\" aria-label=\"3  spread 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.  Spread 구문</h2>\n<hr>\n<blockquote>\n<p>여러개의 값을 묶은 하나의 배열을 각각의 개별 값으로 펼치는 문법</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>numbers<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//  1 2 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//  1 2 3</span>\n\n<span class=\"token keyword\">const</span> numbers1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> numbers2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>numbers1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>numbers2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// [1, 2, 3, 4]</span>\n\n<span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noa'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>members<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// {0: 'adam', 1: 'eve', 2: 'noa'} -> index가 키값으로 담김</span></code></pre></div>\n<br>\n<h3 id=\"객체-spread\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-spread\" aria-label=\"객체 spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 Spread</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span>\n    from<span class=\"token operator\">:</span> <span class=\"token string\">'South of Korea'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> spreadObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sister<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token comment\">// 객체를 복사해서 spread 할 수 있다.</span>\n    <span class=\"token operator\">...</span>newObj\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>spreadObj<span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">// {sister: true, name: 'adam', age: 30, sex: 'male', from: 'South of Korea'}</span></code></pre></div>\n<br>\n<h3 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h3>\n<ul>\n<li>\n<p>Spread 구문을 사용해서 새로운 배열을 만든다거나 함수의 아규먼트로 사용할 수는 없다.</p>\n<p>⇒ <strong>객체 spread</strong>  할때는 반드시 <strong>객체를 표현하는 중괄호 안에서</strong> 활용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> latte <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  esspresso<span class=\"token operator\">:</span> <span class=\"token string\">'30ml'</span><span class=\"token punctuation\">,</span>\n  milk<span class=\"token operator\">:</span> <span class=\"token string\">'150ml'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cafeMocha <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>latte<span class=\"token punctuation\">,</span>\n  chocolate<span class=\"token operator\">:</span> <span class=\"token string\">'20ml'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>latte<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>cafeMocha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"모던한-프로퍼티-표기법\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%98%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%91%9C%EA%B8%B0%EB%B2%95\" aria-label=\"모던한 프로퍼티 표기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모던한 프로퍼티 표기법</h2>\n<hr>\n<ul>\n<li>\n<p>키값이 변수이름 또는 함수이름과 같다면 생략이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 모던한 프로퍼티 표기법</span>\n<span class=\"token keyword\">const</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'Daehwi'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> <span class=\"token string\">'Kim'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">firstName<span class=\"token punctuation\">,</span> lastName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> firstName<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token operator\">:</span> lastName<span class=\"token punctuation\">,</span>\n  getFullName<span class=\"token operator\">:</span> getFullName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>                                                                                  ⬇️</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">,</span>\n  getFullName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n  <br>\n</li>\n<li>\n<p>계산된 속성명 (computed property name)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 표현식의 값을 대괄호[]로 감싸주면 property name으로 사용할 수 있다. </span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">[</span>표현식<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> 값<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> propertyName <span class=\"token operator\">=</span> <span class=\"token string\">'BirthDay'</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> adam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'my'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">1992</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'DaeHwi Kim'</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>adam<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// {myage: 30, BirthDay: 1992, Name: 'DaeHwi Kim'}</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%9E%A5statements-%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9Dexpressions\">1. 문장(Statements) 과 표현식(Expressions)</a></p>\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%9E%A5statements\">문장(Statements)</a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\">표현식</a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EC%9E%A5-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8%EC%9E%A5\">표현식인 문장 Vs 표현식이 아닌 문장</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\">2. 조건 연산자</a></p>\n<ul>\n<li><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90\">삼항 연산자</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3--spread-%EA%B5%AC%EB%AC%B8\">3.  Spread 구문</a></p>\n<ul>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-spread\">객체 Spread</a></li>\n<li><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\">주의 사항</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%8D%98%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%91%9C%EA%B8%B0%EB%B2%95\">모던한 프로퍼티 표기법</a></p>\n</li>\n</ul>\n</div>","excerpt":"1. 문장(Statements) 과 표현식(Expressions) 문장(Statements) Javascript 에서 문장은 어떤 동작이 일어나도록 작성된 최소한의 코드덩어리를 가리킨다. 표현식 표현식은 결과적으로 하나의 값이 되는 모든 코드를 가리킨다. 어떤 하나의 값을 그대로 작성하는 것 → 표현식 연산자를 이용한 연산식 → 하나의 값 → 표현식 선언된 변수를 호출, 객체의 프로퍼티에 접근 → 하나의 값 → 표현식 ⇒ 결국 길이와는 상관없이 결과적으로 하나의 값이 되는 코드를 모두 표현식이라 한다. 표현식이면서 문장, 문장이면서 표현식 표현식인 문장 Vs 표현식이 아닌 문장 결과적으로 문장은 다시 표현식인 문장과, 표현식이 아닌 문장으로 나눌 수 있고, 이 둘을 구분하는 가장 간단한 방법은 구분하고자 하는 문장을 변수에 할당하거나 어떤 함수의 아규먼트로 전달해보는 것이다. ⇒   메소드의 아규먼트로  문을 전달하거나 어떤 변수에  반복문을 할당하게 되면  Error 가 발생하게…","frontmatter":{"date":"December 07, 2021","title":"JavaScript - 문장(Statements)과 표현식(Expressions)","categories":"javascript","author":"Daehwi Kim","emoji":"⭐"},"fields":{"slug":"/javascript-statement/"}},"next":{"id":"20207bf2-233d-560d-87e4-3641c005acc5","html":"<h2 id=\"함수를-만드는-방법\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"함수를 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수를 만드는 방법</h2>\n<hr>\n<br>\n<h3 id=\"함수-선언function-declaration\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8function-declaration\" aria-label=\"함수 선언function declaration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언(Function Declaration)</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">함수이름</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">파라미터</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t동작\n\t<span class=\"token keyword\">return</span> 리턴값\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"함수-표현식-function-expression\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-function-expression\" aria-label=\"함수 표현식 function expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 표현식 (Function Expression)</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 선언을 값처럼 할당하는 방식</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printApple</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h3 id=\"함수-선언과-함수-표현식의-차이\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EA%B3%BC-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"함수 선언과 함수 표현식의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언과 함수 표현식의 차이</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">printOrange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Orange </span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printOrange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Orange'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printApple</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printApple</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">printJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'JS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">printAdam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adam'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 함수 선언은 전역적으로 호출이 된다</span>\n<span class=\"token function\">printAdam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">printJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 표현식은 할당된 변수에 따라 스코프가 결정된다.</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">printJS</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'JS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">printHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printApple</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"기명-함수-표현식-named-function-expression\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%AA%85-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-named-function-expression\" aria-label=\"기명 함수 표현식 named function expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기명 함수 표현식 (Named Function Expression)</h2>\n<hr>\n<ul>\n<li>함수 표현식으로 만들 때 선언하는 함수에 이름을 붙일 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printSayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHiFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sayHiFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Hi</span>\n<span class=\"token comment\">// Hi</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"즉시-실행-함수\" style=\"position:relative;\"><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98\" aria-label=\"즉시 실행 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>즉시 실행 함수</h2>\n<hr>\n<ul>\n<li>IIFE(Immediately Invoked Function Expression )라 한다.</li>\n<li>함수 선언과 동시에 즉시 실행되는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 5</span></code></pre></div>\n<br>\n<h3 id=\"즉시-실행-함수의-활용\" style=\"position:relative;\"><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98%EC%9D%98-%ED%99%9C%EC%9A%A9\" aria-label=\"즉시 실행 함수의 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>즉시 실행 함수의 활용</h3>\n<ol>\n<li>\n<p>선언과 동시에 실행이 이뤄지기 때문에 일반적으로 프로그램 초기화 기능에 많이 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 초기화 될때 시작할 코드</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>재사용이 필요없는 일회성 동작을 구성할 때 활용</p>\n<ul>\n<li>\n<p>함수의 리턴값을 바로 변수에 할당할떄 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> greetingMessage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi! My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Hi My Name is Adam</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n<br>\n<h2 id=\"값으로서-함수\" style=\"position:relative;\"><a href=\"#%EA%B0%92%EC%9C%BC%EB%A1%9C%EC%84%9C-%ED%95%A8%EC%88%98\" aria-label=\"값으로서 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값으로서 함수</h2>\n<hr>\n<ul>\n<li>\n<p><code class=\"language-text\">Javascript</code> 에서 함수는 변수나 데이터구조 또는 다른 함수의 파라미터, 리턴값으로 할당되어질 수 있다. ⇒ <strong>일급 함수 (Fisrt Class Function)</strong> 이라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeQuize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">quiz<span class=\"token punctuation\">,</span> answer<span class=\"token punctuation\">,</span> success<span class=\"token punctuation\">,</span> fail</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>quiz<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> answer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3 + 5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'Right Answer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'Wrong Answer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> question <span class=\"token operator\">=</span> <span class=\"token string\">'5 + 3 = ?'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 여기서 getSuccess(), getFail()함수는 콜백 함수이다.</span>\n<span class=\"token function\">makeQuize</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">,</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span> getSuccess<span class=\"token punctuation\">,</span> getFail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"콜백함수\" style=\"position:relative;\"><a href=\"#%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98\" aria-label=\"콜백함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백함수</h3>\n<ul>\n<li>다른 함수의 파라미터로 전달된 함수</li>\n</ul>\n<br>\n<h3 id=\"고차-함수\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98\" aria-label=\"고차 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고차 함수</h3>\n<ul>\n<li>\n<p>함수를 리턴함수에서 리턴된 함수를 바로 호출하여 사용하는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getPrintHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 고차함수</span>\n<span class=\"token function\">getPrintHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"parameter-and-argument\" style=\"position:relative;\"><a href=\"#parameter-and-argument\" aria-label=\"parameter and argument permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameter And Argument</h2>\n<hr>\n<ul>\n<li>\n<p>Parameter : 함수 선언 부분에서 소괄호 부분에 해당하는 부분 ⇒ <code class=\"language-text\">function greeting(name) { }</code></p>\n</li>\n<li>\n<p>Argument : 함수를 호출하는 부분에서 Parameter로 전달하는 부분 ⇒ <code class=\"language-text\">greeting('Adam')</code></p>\n</li>\n<li>\n<p>함수의 기본 값</p>\n<ul>\n<li>\n<p>기본값 지정할 수 있다. : <code class=\"language-text\">function greeting(name = 'adam')</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">undefine</code> 으로 기본값을 이용가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token number\">29</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi my name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I'am </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> old</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Hi my name is adam</span>\n<span class=\"token comment\">// I'am 30 old</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>다른 파라미터를 이용하여 함수를 선언할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">numSum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">numSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// 4</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"arguments-객체\" style=\"position:relative;\"><a href=\"#arguments-%EA%B0%9D%EC%B2%B4\" aria-label=\"arguments 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arguments 객체</h3>\n<ul>\n<li>\n<p>함수에 전달된 <code class=\"language-text\">arguments</code> 들을 <code class=\"language-text\">arguments</code> 객체로 다룰 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printArguments</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> arg <span class=\"token keyword\">of</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-----------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printArguments</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jesus'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Adam</span>\n<span class=\"token comment\">// Eve</span>\n<span class=\"token comment\">// Json</span>\n<span class=\"token comment\">// Jesus</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"rest-parameter\" style=\"position:relative;\"><a href=\"#rest-parameter\" aria-label=\"rest parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rest Parameter</h3>\n<ul>\n<li><code class=\"language-text\">arguments</code> 유사배열 객체와는 다르게 유연하게 arguments 들을 다룰 수 있는 배열 객체</li>\n<li>일반 <code class=\"language-text\">argument</code> 와 같이 쓸 수 있다. (하지만 rest parameter는 가장 마지막에 써야된다.)\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>others</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Ranking'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">우승 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">준우승 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>second<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> others<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">참가자 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lay'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Emil'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Ranking</span>\n<span class=\"token comment\">// 우승 : Adam</span>\n<span class=\"token comment\">// 준우승 : Eve</span>\n<span class=\"token comment\">// 참가자 : Lay</span>\n<span class=\"token comment\">// 참가자 : Json</span>\n<span class=\"token comment\">// 참가자 : Emil</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"arrow-function\" style=\"position:relative;\"><a href=\"#arrow-function\" aria-label=\"arrow function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arrow Function</h2>\n<hr>\n<br>\n<blockquote>\n<p>함수 선언을 더욱 간결하게 표현한 익명 함수</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 일반적인 함수 선언</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Arrow Function 을 이용하여 작성</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 파라미터가 하나인 함수는 소괄호()를 생략 할 수 있다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 내부의 동작이 리턴문 한문장이라면 중괄호{}와 return문을 생략 할 수 있다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n\n<span class=\"token comment\">// 객체를 리턴한다면 소괄호를 감싸주어야된다. (함수의 동작부분으로 인식하기 때문)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name <span class=\"token operator\">:</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Arrow Function 에서는 arugments 객체를 사용할 수 없다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getArg</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">getArg</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Uncaught Error</span>\n</code></pre></div>\n<br>\n<br>\n<h2 id=\"this-객체\" style=\"position:relative;\"><a href=\"#this-%EA%B0%9D%EC%B2%B4\" aria-label=\"this 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>This 객체</h2>\n<hr>\n<br>\n<blockquote>\n<p><code class=\"language-text\">This</code> 는 함수를 호출한 객체를 가리키는 키워드</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 기본 this 값 호출</span>\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'myObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> otherObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'otherObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\notherObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 함수를 호출한 객체를 프린트</span>\n<span class=\"token comment\">// {content: 'myObj', printThis: ƒ}</span>\n<span class=\"token comment\">// {content: 'otherObj', printThis: ƒ}</span></code></pre></div>\n<br>\n<br>\n<blockquote>\n<p>Arrow Function에서의 this는 Arrow Function이 선언되기 직전의 객체를 가리켜, this를 사용할 때는 일반함수를 권장한다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Arrow Function의 This 이 선언되기 직전인 Window객체를 가리킨다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printThis</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'myObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> otherObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'otherObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\notherObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span>\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span>\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\">함수를 만드는 방법</a></p>\n<ul>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8function-declaration\">함수 선언(Function Declaration)</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-function-expression\">함수 표현식 (Function Expression)</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EA%B3%BC-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4\">함수 선언과 함수 표현식의 차이</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B8%B0%EB%AA%85-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-named-function-expression\">기명 함수 표현식 (Named Function Expression)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98\">즉시 실행 함수</a></p>\n<ul>\n<li><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98%EC%9D%98-%ED%99%9C%EC%9A%A9\">즉시 실행 함수의 활용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%92%EC%9C%BC%EB%A1%9C%EC%84%9C-%ED%95%A8%EC%88%98\">값으로서 함수</a></p>\n<ul>\n<li><a href=\"#%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98\">콜백함수</a></li>\n<li><a href=\"#%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98\">고차 함수</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#parameter-and-argument\">Parameter And Argument</a></p>\n<ul>\n<li><a href=\"#arguments-%EA%B0%9D%EC%B2%B4\">Arguments 객체</a></li>\n<li><a href=\"#rest-parameter\">Rest Parameter</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#arrow-function\">Arrow Function</a></p>\n</li>\n<li>\n<p><a href=\"#this-%EA%B0%9D%EC%B2%B4\">This 객체</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 04, 2021","title":"모던 자바스크립트(2) - 함수 다루기","categories":"javascript","author":"Daehwi Kim","emoji":"⭐"},"fields":{"slug":"/modern-javascript-2/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://kdh92417.github.io","comments":{"utterances":{"repo":"kdh92417/kdh92417.github.io"}}}}},"pageContext":{"slug":"/javascript-statement/","nextSlug":"/modern-javascript-2/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}