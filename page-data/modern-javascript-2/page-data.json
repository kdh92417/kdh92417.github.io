{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/modern-javascript-2/",
    "result": {"data":{"cur":{"id":"20207bf2-233d-560d-87e4-3641c005acc5","html":"<h2 id=\"함수를-만드는-방법\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"함수를 만드는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수를 만드는 방법</h2>\n<hr>\n<br>\n<h3 id=\"함수-선언function-declaration\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8function-declaration\" aria-label=\"함수 선언function declaration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언(Function Declaration)</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">함수이름</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">파라미터</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t동작\n\t<span class=\"token keyword\">return</span> 리턴값\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"함수-표현식-function-expression\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-function-expression\" aria-label=\"함수 표현식 function expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 표현식 (Function Expression)</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 선언을 값처럼 할당하는 방식</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printApple</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h3 id=\"함수-선언과-함수-표현식의-차이\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EA%B3%BC-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"함수 선언과 함수 표현식의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언과 함수 표현식의 차이</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">printOrange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Orange </span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printOrange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Orange'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printApple</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ReferenceError</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printApple</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">printJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'JS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">printAdam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adam'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 함수 선언은 전역적으로 호출이 된다</span>\n<span class=\"token function\">printAdam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">printJS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 표현식은 할당된 변수에 따라 스코프가 결정된다.</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">printJS</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'JS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">printHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printApple</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Apple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"기명-함수-표현식-named-function-expression\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%AA%85-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-named-function-expression\" aria-label=\"기명 함수 표현식 named function expression permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기명 함수 표현식 (Named Function Expression)</h2>\n<hr>\n<ul>\n<li>함수 표현식으로 만들 때 선언하는 함수에 이름을 붙일 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printSayHi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sayHiFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sayHiFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Hi</span>\n<span class=\"token comment\">// Hi</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"즉시-실행-함수\" style=\"position:relative;\"><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98\" aria-label=\"즉시 실행 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>즉시 실행 함수</h2>\n<hr>\n<ul>\n<li>IIFE(Immediately Invoked Function Expression )라 한다.</li>\n<li>함수 선언과 동시에 즉시 실행되는 함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 5</span></code></pre></div>\n<br>\n<h3 id=\"즉시-실행-함수의-활용\" style=\"position:relative;\"><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98%EC%9D%98-%ED%99%9C%EC%9A%A9\" aria-label=\"즉시 실행 함수의 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>즉시 실행 함수의 활용</h3>\n<ol>\n<li>\n<p>선언과 동시에 실행이 이뤄지기 때문에 일반적으로 프로그램 초기화 기능에 많이 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 초기화 될때 시작할 코드</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>재사용이 필요없는 일회성 동작을 구성할 때 활용</p>\n<ul>\n<li>\n<p>함수의 리턴값을 바로 변수에 할당할떄 사용</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> greetingMessage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi! My name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>myName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Hi My Name is Adam</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n<br>\n<h2 id=\"값으로서-함수\" style=\"position:relative;\"><a href=\"#%EA%B0%92%EC%9C%BC%EB%A1%9C%EC%84%9C-%ED%95%A8%EC%88%98\" aria-label=\"값으로서 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>값으로서 함수</h2>\n<hr>\n<ul>\n<li>\n<p><code class=\"language-text\">Javascript</code> 에서 함수는 변수나 데이터구조 또는 다른 함수의 파라미터, 리턴값으로 할당되어질 수 있다. ⇒ <strong>일급 함수 (Fisrt Class Function)</strong> 이라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">makeQuize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">quiz<span class=\"token punctuation\">,</span> answer<span class=\"token punctuation\">,</span> success<span class=\"token punctuation\">,</span> fail</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>quiz<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> answer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3 + 5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'Right Answer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'Wrong Answer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> question <span class=\"token operator\">=</span> <span class=\"token string\">'5 + 3 = ?'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 여기서 getSuccess(), getFail()함수는 콜백 함수이다.</span>\n<span class=\"token function\">makeQuize</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">,</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span> getSuccess<span class=\"token punctuation\">,</span> getFail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"콜백함수\" style=\"position:relative;\"><a href=\"#%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98\" aria-label=\"콜백함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백함수</h3>\n<ul>\n<li>다른 함수의 파라미터로 전달된 함수</li>\n</ul>\n<br>\n<h3 id=\"고차-함수\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98\" aria-label=\"고차 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고차 함수</h3>\n<ul>\n<li>\n<p>함수를 리턴함수에서 리턴된 함수를 바로 호출하여 사용하는 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getPrintHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 고차함수</span>\n<span class=\"token function\">getPrintHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h2 id=\"parameter-and-argument\" style=\"position:relative;\"><a href=\"#parameter-and-argument\" aria-label=\"parameter and argument permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Parameter And Argument</h2>\n<hr>\n<ul>\n<li>\n<p>Parameter : 함수 선언 부분에서 소괄호 부분에 해당하는 부분 ⇒ <code class=\"language-text\">function greeting(name) { }</code></p>\n</li>\n<li>\n<p>Argument : 함수를 호출하는 부분에서 Parameter로 전달하는 부분 ⇒ <code class=\"language-text\">greeting('Adam')</code></p>\n</li>\n<li>\n<p>함수의 기본 값</p>\n<ul>\n<li>\n<p>기본값 지정할 수 있다. : <code class=\"language-text\">function greeting(name = 'adam')</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">undefine</code> 으로 기본값을 이용가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">=</span> <span class=\"token number\">29</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi my name is </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I'am </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> old</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">greeting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Hi my name is adam</span>\n<span class=\"token comment\">// I'am 30 old</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>다른 파라미터를 이용하여 함수를 선언할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">numSum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">numSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// 4</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"arguments-객체\" style=\"position:relative;\"><a href=\"#arguments-%EA%B0%9D%EC%B2%B4\" aria-label=\"arguments 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arguments 객체</h3>\n<ul>\n<li>\n<p>함수에 전달된 <code class=\"language-text\">arguments</code> 들을 <code class=\"language-text\">arguments</code> 객체로 다룰 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printArguments</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> arg <span class=\"token keyword\">of</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-----------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printArguments</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jesus'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Adam</span>\n<span class=\"token comment\">// Eve</span>\n<span class=\"token comment\">// Json</span>\n<span class=\"token comment\">// Jesus</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"rest-parameter\" style=\"position:relative;\"><a href=\"#rest-parameter\" aria-label=\"rest parameter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rest Parameter</h3>\n<ul>\n<li><code class=\"language-text\">arguments</code> 유사배열 객체와는 다르게 유연하게 arguments 들을 다룰 수 있는 배열 객체</li>\n<li>일반 <code class=\"language-text\">argument</code> 와 같이 쓸 수 있다. (하지만 rest parameter는 가장 마지막에 써야된다.)\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>others</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Ranking'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">우승 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>first<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">준우승 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>second<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> others<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">참가자 : </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>arg<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Lay'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Emil'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Ranking</span>\n<span class=\"token comment\">// 우승 : Adam</span>\n<span class=\"token comment\">// 준우승 : Eve</span>\n<span class=\"token comment\">// 참가자 : Lay</span>\n<span class=\"token comment\">// 참가자 : Json</span>\n<span class=\"token comment\">// 참가자 : Emil</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"arrow-function\" style=\"position:relative;\"><a href=\"#arrow-function\" aria-label=\"arrow function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arrow Function</h2>\n<hr>\n<br>\n<blockquote>\n<p>함수 선언을 더욱 간결하게 표현한 익명 함수</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 일반적인 함수 선언</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Arrow Function 을 이용하여 작성</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">number</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 파라미터가 하나인 함수는 소괄호()를 생략 할 수 있다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 내부의 동작이 리턴문 한문장이라면 중괄호{}와 return문을 생략 할 수 있다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTwice</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> number <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n\n<span class=\"token comment\">// 객체를 리턴한다면 소괄호를 감싸주어야된다. (함수의 동작부분으로 인식하기 때문)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name <span class=\"token operator\">:</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Arrow Function 에서는 arugments 객체를 사용할 수 없다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getArg</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">getArg</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Uncaught Error</span>\n</code></pre></div>\n<br>\n<br>\n<h2 id=\"this-객체\" style=\"position:relative;\"><a href=\"#this-%EA%B0%9D%EC%B2%B4\" aria-label=\"this 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>This 객체</h2>\n<hr>\n<br>\n<blockquote>\n<p><code class=\"language-text\">This</code> 는 함수를 호출한 객체를 가리키는 키워드</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 기본 this 값 호출</span>\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'myObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> otherObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'otherObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\notherObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 함수를 호출한 객체를 프린트</span>\n<span class=\"token comment\">// {content: 'myObj', printThis: ƒ}</span>\n<span class=\"token comment\">// {content: 'otherObj', printThis: ƒ}</span></code></pre></div>\n<br>\n<br>\n<blockquote>\n<p>Arrow Function에서의 this는 Arrow Function이 선언되기 직전의 객체를 가리켜, this를 사용할 때는 일반함수를 권장한다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Arrow Function의 This 이 선언되기 직전인 Window객체를 가리킨다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printThis</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'myObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> otherObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  content<span class=\"token operator\">:</span> <span class=\"token string\">'otherObj'</span><span class=\"token punctuation\">,</span>\n  printThis<span class=\"token operator\">:</span> printThis<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nmyObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\notherObj<span class=\"token punctuation\">.</span><span class=\"token function\">printThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span>\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span>\n<span class=\"token comment\">// Window {window: Window, self: Window, document: document, name: '', location: Location, …}</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%95%A8%EC%88%98%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%B0%A9%EB%B2%95\">함수를 만드는 방법</a></p>\n<ul>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8function-declaration\">함수 선언(Function Declaration)</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-function-expression\">함수 표현식 (Function Expression)</a></li>\n<li><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EA%B3%BC-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4\">함수 선언과 함수 표현식의 차이</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B8%B0%EB%AA%85-%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-named-function-expression\">기명 함수 표현식 (Named Function Expression)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98\">즉시 실행 함수</a></p>\n<ul>\n<li><a href=\"#%EC%A6%89%EC%8B%9C-%EC%8B%A4%ED%96%89-%ED%95%A8%EC%88%98%EC%9D%98-%ED%99%9C%EC%9A%A9\">즉시 실행 함수의 활용</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B0%92%EC%9C%BC%EB%A1%9C%EC%84%9C-%ED%95%A8%EC%88%98\">값으로서 함수</a></p>\n<ul>\n<li><a href=\"#%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98\">콜백함수</a></li>\n<li><a href=\"#%EA%B3%A0%EC%B0%A8-%ED%95%A8%EC%88%98\">고차 함수</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#parameter-and-argument\">Parameter And Argument</a></p>\n<ul>\n<li><a href=\"#arguments-%EA%B0%9D%EC%B2%B4\">Arguments 객체</a></li>\n<li><a href=\"#rest-parameter\">Rest Parameter</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#arrow-function\">Arrow Function</a></p>\n</li>\n<li>\n<p><a href=\"#this-%EA%B0%9D%EC%B2%B4\">This 객체</a></p>\n</li>\n</ul>\n</div>","excerpt":"함수를 만드는 방법 함수 선언(Function Declaration) 함수 표현식 (Function Expression) 함수 선언과 함수 표현식의 차이 기명 함수 표현식 (Named Function Expression) 함수 표현식으로 만들 때 선언하는 함수에 이름을 붙일 수 있다. 즉시 실행 함수 IIFE(Immediately Invoked Function Expression )라 한다. 함수 선언과 동시에 즉시 실행되는 함수 즉시 실행 함수의 활용 선언과 동시에 실행이 이뤄지기 때문에 일반적으로 프로그램 초기화 기능에 많이 사용 재사용이 필요없는 일회성 동작을 구성할 때 활용 함수의 리턴값을 바로 변수에 할당할떄 사용 값으로서 함수  에서 함수는 변수나 데이터구조 또는 다른 함수의 파라미터, 리턴값으로 할당되어질 수 있다. ⇒ 일급 함수 (Fisrt Class Function) 이라 한다. 콜백함수 다른 함수의 파라미터로 전달된 함수 고차 함수 함수를 리턴함수에서 리턴된 함수…","frontmatter":{"date":"December 04, 2021","title":"모던 자바스크립트(2) - 함수 다루기","categories":"javascript","author":"Daehwi Kim","emoji":"⭐"},"fields":{"slug":"/modern-javascript-2/"}},"next":{"id":"13efbda9-3b32-57d7-8a7c-bb41f333ff9a","html":"<h2 id=\"모던-자바스크립트의-이해\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-label=\"모던 자바스크립트의 이해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모던 자바스크립트의 이해</h2>\n<hr>\n<h3 id=\"모던-자바스크립트란\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%9E%80\" aria-label=\"모던 자바스크립트란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모던 자바스크립트란?</h3>\n<p>현시점에 사용하기 적합한 범위 내에서 최신 버전의 표준을 준수하는 자바스크립트</p>\n<h3 id=\"javascript-vs-ecmascript\" style=\"position:relative;\"><a href=\"#javascript-vs-ecmascript\" aria-label=\"javascript vs ecmascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript vs ECMAScript</h3>\n<ul>\n<li>Javascript는 프로그래밍 언어, ECMAScript는 프로그래밍 언어의 표준(모든 스크립트 언어의 표준)</li>\n<li>Javascript는 ECMAScript를 기반으로 하지만 ECMAScript에 정의된 내용뿐만 아니라, 다른 부가적인 기능도 있다.(ex DOM을 다루는 문법등 - ECMAScript표준화된 문법이아니라 WebIDL에서 표준화된 기술)</li>\n</ul>\n<br>\n<br>\n<h2 id=\"javascript의-동작원리\" style=\"position:relative;\"><a href=\"#javascript%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC\" aria-label=\"javascript의 동작원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript의 동작원리</h2>\n<hr>\n<h3 id=\"자료형이-유연\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%B4-%EC%9C%A0%EC%97%B0\" aria-label=\"자료형이 유연 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자료형이 유연</h3>\n<ul>\n<li>Number ( 기본형 )</li>\n<li>String ( 기본형 )</li>\n<li>Boolean ( 기본형 )</li>\n<li>Null ( 기본형 )</li>\n<li>undefined ( 기본형 )</li>\n<li>Object (참조형)</li>\n<li>Symbol : 유일한 값을 만들 때</li>\n<li>BigInt : 어멍 큰 숫자를 다룰 때</li>\n</ul>\n<br>\n<h3 id=\"symbol과-bigint\" style=\"position:relative;\"><a href=\"#symbol%EA%B3%BC-bigint\" aria-label=\"symbol과 bigint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Symbol과 BigInt</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Symbol 데이터타입으로 user 변수 생성</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 심볼 값 넣어서 user 변수 생성</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is a user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Symbol 값을 담게 된 user는 다른 어떤 값과 비교해도 true가 될 수 없는 고유한 변수가 됨</span>\nuser <span class=\"token operator\">===</span> <span class=\"token string\">'this is user'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token string\">'Symbol'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nuser <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n\n<span class=\"token comment\">// 심지어 똑같은 설명을 붙인 심볼을 만들더라도 두값을 비교하면 false가 반환</span>\n<span class=\"token keyword\">const</span> symbolA <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is Symbol'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> symbolB <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is Symbol'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>symbolA <span class=\"token operator\">===</span> symbolB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<br>\n<h3 id=\"bigint\" style=\"position:relative;\"><a href=\"#bigint\" aria-label=\"bigint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BigInt</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">BigInt</code> 는 자바스크립트에서 아주 큰 정수(Integer)를 표현하기 위해 등장한 데이터 타입</p>\n</li>\n<li>\n<p>자바스크립트에서 안전한 최대 정수는 $( 2^{53} - 1 )$  이고, 최소 정수는 $-( 2^{53} - 1 )$ 이어서 이범위를 초과하면 연산에 미세한 오류가 발생한다.</p>\n<p>⇒ 그래서 이런 큰수 또는 작은수에는  <code class=\"language-text\">BigInt</code> 자료형을 사용한다.</p>\n</li>\n</ul>\n<p><strong>사용법</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 숫자뒤에 n을 붙임</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">9007199254740993n</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9007199254740993</span>\n\n<span class=\"token comment\">// BigInt()함수사용</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">9007199254740993</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9007199254740993</span></code></pre></div>\n<p><strong>주의 사항</strong></p>\n<ul>\n<li>소수 표현에는 사용 불가</li>\n<li><code class=\"language-text\">Bigint</code> 타입끼리만 연산 가능</li>\n</ul>\n<br>\n<h3 id=\"불린인-듯-불린-아닌-불린-같은-값\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%A6%B0%EC%9D%B8-%EB%93%AF-%EB%B6%88%EB%A6%B0-%EC%95%84%EB%8B%8C-%EB%B6%88%EB%A6%B0-%EA%B0%99%EC%9D%80-%EA%B0%92\" aria-label=\"불린인 듯 불린 아닌 불린 같은 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불린인 듯 불린 아닌 불린 같은 값</h3>\n<ul>\n<li>Falsy 값 : <code class=\"language-text\">false</code> , <code class=\"language-text\">null</code> , <code class=\"language-text\">nudefined</code> , <code class=\"language-text\">NaN</code> , <code class=\"language-text\">0</code> , <code class=\"language-text\">''</code></li>\n<li>Truthy 값 : <code class=\"language-text\">[]</code> , <code class=\"language-text\">{}</code></li>\n</ul>\n<br>\n<br>\n<h2 id=\"and와-or의-연산-방식\" style=\"position:relative;\"><a href=\"#and%EC%99%80-or%EC%9D%98-%EC%97%B0%EC%82%B0-%EB%B0%A9%EC%8B%9D\" aria-label=\"and와 or의 연산 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AND와 OR의 연산 방식</h2>\n<hr>\n<h3 id=\"and-연산\" style=\"position:relative;\"><a href=\"#and-%EC%97%B0%EC%82%B0\" aria-label=\"and 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AND 연산</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Codeit'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Javscript</span>\n\n<span class=\"token comment\">// 왼쪽 값이 true이면 오른쪽 값 리턴</span>\n<span class=\"token comment\">// 왼쪽 값이 false이면 왼쪽 값 리턴</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// false</span></code></pre></div>\n<br>\n<h3 id=\"or-연산\" style=\"position:relative;\"><a href=\"#or-%EC%97%B0%EC%82%B0\" aria-label=\"or 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OR 연산</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 왼쪽 값이 true이면 왼쪽 값 리턴</span>\n<span class=\"token comment\">// 왼쪽 값이 false이면 오른쪽 값 리턴</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// ture</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// false</span></code></pre></div>\n<br>\n<h3 id=\"우선순위\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우선순위</h3>\n<ul>\n<li>AND 연산자가 OR 연산자보다 우선순위가 높다 ( AND > OR )</li>\n</ul>\n<br>\n<h3 id=\"null-병합-연산자--es2020에서-새롭게-추가됨-\" style=\"position:relative;\"><a href=\"#null-%EB%B3%91%ED%95%A9-%EC%97%B0%EC%82%B0%EC%9E%90--es2020%EC%97%90%EC%84%9C-%EC%83%88%EB%A1%AD%EA%B2%8C-%EC%B6%94%EA%B0%80%EB%90%A8-\" aria-label=\"null 병합 연산자  es2020에서 새롭게 추가됨  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>null 병합 연산자 ( ES2020에서 새롭게 추가됨 )</h3>\n<ul>\n<li><code class=\"language-text\">??</code> 물음표 두개를 사용해서 <code class=\"language-text\">null</code> 혹은 <code class=\"language-text\">undefined</code> 값을 가려내는 연산자</li>\n<li><code class=\"language-text\">??</code> 연산자 왼편의 값이 <code class=\"language-text\">null</code> 이나 <code class=\"language-text\">undefined</code> 라면 연산자 오른편 값이 리턴</li>\n<li><code class=\"language-text\">??</code> 연산자 왼편의 값이 <code class=\"language-text\">null</code> 이나 <code class=\"language-text\">undefined</code> 이 아니라면 연산자 왼쪽 값이 리턴</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> example1 <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">??</span> <span class=\"token string\">'I'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> example2 <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">??</span> <span class=\"token string\">'love'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> example3 <span class=\"token operator\">=</span> <span class=\"token string\">'Codeit'</span> <span class=\"token operator\">??</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>example1<span class=\"token punctuation\">,</span> example2<span class=\"token punctuation\">,</span> example3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// I love Codeit</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"변수와-스코프\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%99%80-%EC%8A%A4%EC%BD%94%ED%94%84\" aria-label=\"변수와 스코프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수와 스코프</h2>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> title<span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 예처럼 변수선언보다 사용이 먼저되어 선언이 올라간듯한 현상을 <strong>호이스팅(Hoisting) 이라 한다.</strong></p>\n<p><br><br></p>\n<ul>\n<li>할당된 값은 할당 이후에 접근이 가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span>\n<span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'adam'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// adam</span></code></pre></div>\n<p><br><br></p>\n<ul>\n<li><code class=\"language-text\">var</code> 변수는 중복선언이 가능한 문제가 있다. ( 먼저 선언한 변수값이 사라짐 )</li>\n<li>하지만 <code class=\"language-text\">let</code> 변수나 <code class=\"language-text\">const</code> 변수는 선언 이후에 사용이 가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Apple'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Apple</span>\n<span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// Python</span></code></pre></div>\n<p><br><br></p>\n<ul>\n<li><code class=\"language-text\">var</code> 변수는 조건문이나 반복문에서 지역변수로 선언되는 것이 아니라 전역변수로 생성되는 문제가있다.\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x: '</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y: '</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i: '</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Output\n0\n1\n2\n3\n4\nx: 3\nx: 3\ni: 5\n*/</span></code></pre></div>\n</li>\n</ul>\n<p><br><br></p>\n<ul>\n<li>\n<p>하지만 <code class=\"language-text\">let</code> 과 <code class=\"language-text\">const</code> 변수는 <code class=\"language-text\">{}</code> 코드블럭으로 구분되어만 있어도 스코프를 구분한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Apple'</span><span class=\"token punctuation\">;</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Apple</span>\n<span class=\"token comment\">// Uncaught</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><code class=\"language-text\">var</code> , <code class=\"language-text\">let</code>, <code class=\"language-text\">const</code>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> x<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 함수 스코프 (function scope)</span>\n<span class=\"token keyword\">let</span> y<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 블록 스코프 (block scope)</span>\n<span class=\"token keyword\">const</span> z<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 블록 스코프 (block scope)</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EC%9D%B4%ED%95%B4\">모던 자바스크립트의 이해</a></p>\n<ul>\n<li><a href=\"#%EB%AA%A8%EB%8D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%9E%80\">모던 자바스크립트란?</a></li>\n<li><a href=\"#javascript-vs-ecmascript\">Javascript vs ECMAScript</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#javascript%EC%9D%98-%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC\">Javascript의 동작원리</a></p>\n<ul>\n<li><a href=\"#%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%B4-%EC%9C%A0%EC%97%B0\">자료형이 유연</a></li>\n<li><a href=\"#symbol%EA%B3%BC-bigint\">Symbol과 BigInt</a></li>\n<li><a href=\"#bigint\">BigInt</a></li>\n<li><a href=\"#%EB%B6%88%EB%A6%B0%EC%9D%B8-%EB%93%AF-%EB%B6%88%EB%A6%B0-%EC%95%84%EB%8B%8C-%EB%B6%88%EB%A6%B0-%EA%B0%99%EC%9D%80-%EA%B0%92\">불린인 듯 불린 아닌 불린 같은 값</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#and%EC%99%80-or%EC%9D%98-%EC%97%B0%EC%82%B0-%EB%B0%A9%EC%8B%9D\">AND와 OR의 연산 방식</a></p>\n<ul>\n<li><a href=\"#and-%EC%97%B0%EC%82%B0\">AND 연산</a></li>\n<li><a href=\"#or-%EC%97%B0%EC%82%B0\">OR 연산</a></li>\n<li><a href=\"#%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\">우선순위</a></li>\n<li><a href=\"#null-%EB%B3%91%ED%95%A9-%EC%97%B0%EC%82%B0%EC%9E%90--es2020%EC%97%90%EC%84%9C-%EC%83%88%EB%A1%AD%EA%B2%8C-%EC%B6%94%EA%B0%80%EB%90%A8-\">null 병합 연산자 ( ES2020에서 새롭게 추가됨 )</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B3%80%EC%88%98%EC%99%80-%EC%8A%A4%EC%BD%94%ED%94%84\">변수와 스코프</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"November 24, 2021","title":"모던 자바스크립트(1) - 자바스크립트의 동작 원리","categories":"javascript","author":"Daehwi Kim","emoji":"⭐"},"fields":{"slug":"/modern-javascript-1/"}},"prev":{"id":"a263a41d-a5d9-5ec5-91c5-a0b7a24651ba","html":"<h2 id=\"1-문장statements-과-표현식expressions\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%9E%A5statements-%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9Dexpressions\" aria-label=\"1 문장statements 과 표현식expressions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문장(Statements) 과 표현식(Expressions)</h2>\n<hr>\n<h3 id=\"문장statements\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%A5statements\" aria-label=\"문장statements permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문장(Statements)</h3>\n<br>\n<blockquote>\n<p>Javascript 에서 문장은 어떤 동작이 일어나도록 작성된 최소한의 <strong>코드덩어리</strong>를 가리킨다.</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 선언문(문장)</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 할당문(문장)</span>\n\n<span class=\"token comment\">// 문장</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x는 5보다 작다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x는 5와 같거나 크다'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 문장</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"표현식\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식</h3>\n<blockquote>\n<p>표현식은 결과적으로 하나의 값이 되는 모든 코드를 가리킨다.</p>\n</blockquote>\n<br>\n<ul>\n<li>\n<p>어떤 하나의 값을 그대로 작성하는 것 → 표현식</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">5</span>  <span class=\"token comment\">// 5</span>\n<span class=\"token string\">'string'</span>  <span class=\"token comment\">// string</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>연산자를 이용한 연산식 → 하나의 값 → 표현식</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span>   <span class=\"token comment\">// 12</span>\n<span class=\"token string\">'I'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'Love'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'Adam'</span>  <span class=\"token comment\">// I Love Adam</span>\n\n<span class=\"token boolean\">true</span> <span class=\"token operator\">||</span> <span class=\"token boolean\">false</span>  <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>선언된 변수를 호출, 객체의 프로퍼티에 접근 → 하나의 값 → 표현식</p>\n<p>⇒ 결국 길이와는 상관없이 결과적으로 하나의 값이 되는 코드를 모두 <strong>표현식</strong>이라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 할당 연산자는 값을 할당하는 동작도 하지만, 할당한 값을 그대로 가지는 표현식이다.</span>\n<span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'Javascript'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> language <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typeof</span> language  <span class=\"token comment\">// object</span>\ntitle  <span class=\"token comment\">// Javascript</span>\nlanguage<span class=\"token punctuation\">.</span>name  <span class=\"token comment\">//Python</span>\nnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><strong>표현식이면서 문장, 문장이면서 표현식</strong>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 할당 연산자는 값을 할당하는 동작도 하지만, 할당한 값을 그대로 가지는 표현식이다.</span>\ntitle <span class=\"token operator\">=</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Python</span>\n\n<span class=\"token comment\">// 함수 호출은 함수를 실행하는 동작도 하지만, 실행한 함수의 리턴 값을 가지는 표현식이다.</span>\n<span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// sayHello 함수의 리턴 값</span>\n\n<span class=\"token comment\">// console.log 메소드는 콘솔에 아규먼트를 출력하는 동작도 하지만, undefined 값을 가지는 표현식이다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"표현식인-문장-vs-표현식이-아닌-문장\" style=\"position:relative;\"><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EC%9E%A5-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8%EC%9E%A5\" aria-label=\"표현식인 문장 vs 표현식이 아닌 문장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>표현식인 문장 Vs 표현식이 아닌 문장</h3>\n<blockquote>\n<p>결과적으로 문장은 다시 <strong>표현식인 문장</strong>과, <strong>표현식이 아닌 문장</strong>으로 나눌 수 있고, 이 둘을 구분하는 가장 간단한 방법은 구분하고자 하는 문장을 변수에 할당하거나 어떤 함수의 아규먼트로 전달해보는 것이다.</p>\n</blockquote>\n<p>⇒  <code class=\"language-text\">console.log</code> 메소드의 아규먼트로 <code class=\"language-text\">if</code> 문을 전달하거나 어떤 변수에 <code class=\"language-text\">for</code> 반복문을 할당하게 되면  <strong>Error</strong> 가 발생하게 된다. === 조건문이나 반복문은 값으로 평가되지 않고 오로지 문장으로만 평가되기 때문</p>\n<br>\n<blockquote>\n<p>💡 자바스크립트에서는 특별한 경우를 제외하면 일반적으로 표현식인 문장은 세미콜론(<code class=\"language-text\">;</code>) 으로, 표현식이 아닌 문장은 문장 자체의 코드블록(중괄호 <code class=\"language-text\">{}</code>)로 그 문장의 범위가 구분된다.</p>\n</blockquote>\n</aside>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> arg <span class=\"token keyword\">of</span> arguments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 동작</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<br>\n<h2 id=\"2-조건-연산자\" style=\"position:relative;\"><a href=\"#2-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"2 조건 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 조건 연산자</h2>\n<hr>\n<h3 id=\"삼항-연산자\" style=\"position:relative;\"><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"삼항 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삼항 연산자</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">조건 ? 조건이 truthy 할 때 표현식 : 조건이 falsy 할 때 표현식;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> con <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> con <span class=\"token operator\">?</span> <span class=\"token string\">'Adam'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Eve</span></code></pre></div>\n</li>\n<li>\n<p>Python</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">con <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\nname <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span> <span class=\"token keyword\">if</span> con <span class=\"token keyword\">else</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"3--spread-구문\" style=\"position:relative;\"><a href=\"#3--spread-%EA%B5%AC%EB%AC%B8\" aria-label=\"3  spread 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.  Spread 구문</h2>\n<hr>\n<blockquote>\n<p>여러개의 값을 묶은 하나의 배열을 각각의 개별 값으로 펼치는 문법</p>\n</blockquote>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>numbers<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//  1 2 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//  1 2 3</span>\n\n<span class=\"token keyword\">const</span> numbers1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> numbers2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>numbers1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>numbers2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// [1, 2, 3, 4]</span>\n\n<span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eve'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noa'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>members<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>newObj<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// {0: 'adam', 1: 'eve', 2: 'noa'} -> index가 키값으로 담김</span></code></pre></div>\n<br>\n<h3 id=\"객체-spread\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-spread\" aria-label=\"객체 spread permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 Spread</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'adam'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">,</span>\n    from<span class=\"token operator\">:</span> <span class=\"token string\">'South of Korea'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> spreadObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sister<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token comment\">// 객체를 복사해서 spread 할 수 있다.</span>\n    <span class=\"token operator\">...</span>newObj\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>spreadObj<span class=\"token punctuation\">)</span>  \n<span class=\"token comment\">// {sister: true, name: 'adam', age: 30, sex: 'male', from: 'South of Korea'}</span></code></pre></div>\n<br>\n<h3 id=\"주의-사항\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주의 사항</h3>\n<ul>\n<li>\n<p>Spread 구문을 사용해서 새로운 배열을 만든다거나 함수의 아규먼트로 사용할 수는 없다.</p>\n<p>⇒ <strong>객체 spread</strong>  할때는 반드시 <strong>객체를 표현하는 중괄호 안에서</strong> 활용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> latte <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  esspresso<span class=\"token operator\">:</span> <span class=\"token string\">'30ml'</span><span class=\"token punctuation\">,</span>\n  milk<span class=\"token operator\">:</span> <span class=\"token string\">'150ml'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cafeMocha <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>latte<span class=\"token punctuation\">,</span>\n  chocolate<span class=\"token operator\">:</span> <span class=\"token string\">'20ml'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>latte<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> arg <span class=\"token keyword\">of</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>cafeMocha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"모던한-프로퍼티-표기법\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%98%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%91%9C%EA%B8%B0%EB%B2%95\" aria-label=\"모던한 프로퍼티 표기법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모던한 프로퍼티 표기법</h2>\n<hr>\n<ul>\n<li>\n<p>키값이 변수이름 또는 함수이름과 같다면 생략이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 모던한 프로퍼티 표기법</span>\n<span class=\"token keyword\">const</span> firstName <span class=\"token operator\">=</span> <span class=\"token string\">'Daehwi'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> <span class=\"token string\">'Kim'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">firstName<span class=\"token punctuation\">,</span> lastName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token operator\">:</span> firstName<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token operator\">:</span> lastName<span class=\"token punctuation\">,</span>\n  getFullName<span class=\"token operator\">:</span> getFullName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>                                                                                  ⬇️</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  firstName<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">,</span>\n  getFullName<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n  <br>\n</li>\n<li>\n<p>계산된 속성명 (computed property name)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 표현식의 값을 대괄호[]로 감싸주면 property name으로 사용할 수 있다. </span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">[</span>표현식<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> 값<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> propertyName <span class=\"token operator\">=</span> <span class=\"token string\">'BirthDay'</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> adam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">'my'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">1992</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">'DaeHwi Kim'</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>adam<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// {myage: 30, BirthDay: 1992, Name: 'DaeHwi Kim'}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"옵셔널-체이닝-optional-chaining\" style=\"position:relative;\"><a href=\"#%EC%98%B5%EC%85%94%EB%84%90-%EC%B2%B4%EC%9D%B4%EB%8B%9D-optional-chaining\" aria-label=\"옵셔널 체이닝 optional chaining permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>옵셔널 체이닝 (Optional Chaining)</h3>\n<blockquote>\n<p>일반적으로 객체의 프로퍼티는 점표기법을 통해서 접근하게되는데, ECMAScript2020에서 등장한 <strong>옵셔널 체이닝</strong>을 이용하여 간단하게 객체의 프로퍼티에 접근할 수 있다.</p>\n</blockquote>\n<ul>\n<li>\n<p>옵셔널 체이닝 연산자( <code class=\"language-text\">?</code> )</p>\n</li>\n<li>\n<p><code class=\"language-text\">?</code> 연산자의 왼편의 프로퍼티 값이 <code class=\"language-text\">null</code> 혹은 <code class=\"language-text\">undefined</code> 값이 아니라면 그다음 프로퍼티 값을 리턴,</p>\n<p>그렇지 않다면 <code class=\"language-text\">undefined</code> 를 반환</p>\n</li>\n<li>\n<p>객체의 프로퍼티에 접근할 때 없는 객체를 접근할 때 Error 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>dog<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span>\n  dog<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Moon'</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Moon</span>\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user2<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// TypeError: Cannot read properties of undefined (reading 'name')</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>위의 에러를 옵셔널 체이닝(Optional Chaining) 방식과 null 병합 연산자를이용하여 에러 없이 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>dog<span class=\"token operator\">?.</span>name <span class=\"token operator\">??</span> <span class=\"token string\">'반려견이 없습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">,</span>\n  dog<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Moon'</span><span class=\"token punctuation\">,</span>\n    sex<span class=\"token operator\">:</span> <span class=\"token string\">'Female'</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> user2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Eve'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user1<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Moon</span>\n<span class=\"token function\">printDogName</span><span class=\"token punctuation\">(</span>user2<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 반려견이 없습니다.</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"5-구조-분해-destructuring\" style=\"position:relative;\"><a href=\"#5-%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4-destructuring\" aria-label=\"5 구조 분해 destructuring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 구조 분해 (Destructuring)</h2>\n<blockquote>\n<p>배열이나 객체를 분해하는 문법</p>\n</blockquote>\n<h3 id=\"1-배열\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EC%97%B4\" aria-label=\"1 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배열</h3>\n<ul>\n<li>\n<p>일반적인 배열을 변수에 할당하는 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'노홍철'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> macbook <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 유재석</span>\n<span class=\"token keyword\">const</span> iphone <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 정준하</span>\n<span class=\"token keyword\">const</span> applewatch <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 정형돈</span>\n<span class=\"token keyword\">const</span> airpods <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 하하</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">Destructuring</code>  문법을 이용해서 변수에 할당 (배열을 분해해서 할당)</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'노홍철'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>macbook<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> applewatch<span class=\"token punctuation\">,</span> airpods<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>macbook<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>applewatch<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정형돈</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>airpods<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 하하</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 배열의 형식이 아니거나 아무것도 할당하지 않으면 Error가 난다.</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>macbook<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> applewatch<span class=\"token punctuation\">,</span> airpods<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// SyntaxError</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>macbook<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> applewatch<span class=\"token punctuation\">,</span> airpods<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// SyntaxError</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>할당 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'노홍철'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>others<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>others<span class=\"token punctuation\">)</span> <span class=\"token comment\">// ['정형돈', '하하', '노홍철']</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">undefined</code> : 선언된 배열의 갯수가 할당하는 변수보다 적을 경우 할당되는 변수는 <code class=\"language-text\">undefined</code> 로 할당</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>기본 값을 정하여 할당할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ranking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> iphone<span class=\"token punctuation\">,</span> other <span class=\"token operator\">=</span> <span class=\"token string\">'other'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ranking\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 유재석</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>iphone<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 정준하</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span> <span class=\"token comment\">// other</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>변수를 교환하여 할당할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> mac <span class=\"token operator\">=</span> <span class=\"token string\">'Adam'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> win <span class=\"token operator\">=</span> <span class=\"token string\">'Eve'</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Adam</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Eve</span>\n\n<span class=\"token punctuation\">[</span>mac<span class=\"token punctuation\">,</span> win<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>win<span class=\"token punctuation\">,</span> mac<span class=\"token punctuation\">]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Eve</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Adam</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"2-객체-분해\" style=\"position:relative;\"><a href=\"#2-%EA%B0%9D%EC%B2%B4-%EB%B6%84%ED%95%B4\" aria-label=\"2 객체 분해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 객체 분해</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'HP Desktop'</span><span class=\"token punctuation\">,</span>\n  price<span class=\"token operator\">:</span> <span class=\"token number\">700000</span><span class=\"token punctuation\">,</span>\n  memory<span class=\"token operator\">:</span> <span class=\"token string\">'16GB'</span><span class=\"token punctuation\">,</span>\n  storage<span class=\"token operator\">:</span> <span class=\"token string\">'1TB SSD'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 객체의 프로퍼티에 따른 구조분해</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> display<span class=\"token punctuation\">,</span> mouse <span class=\"token operator\">=</span> <span class=\"token string\">'Logitech'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> win\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// HP Desktop</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 700000</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 객체의 없는 프로퍼티는 undefined로 반환</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Logitech -> 기본값으로 선언한 값</span></code></pre></div>\n<br>\n<ul>\n<li>rest parameter 이용 : <code class=\"language-text\">...</code></li>\n<li>객체의 프로퍼티네임 지정하여 할당 : <code class=\"language-text\">title</code> → <code class=\"language-text\">product</code>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> product<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> win\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// HP Desktop</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// {price: 700000, memory: '16GB', storage: '1TB SSD'} </span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>computed property name을 이용한 새로운 변수이름으로 할당</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> propertyName <span class=\"token operator\">=</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> product <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> win\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>product<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// HP Desktop</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"3-함수와-destructuring\" style=\"position:relative;\"><a href=\"#3-%ED%95%A8%EC%88%98%EC%99%80-destructuring\" aria-label=\"3 함수와 destructuring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 함수와 Destructuring</h3>\n<ul>\n<li>\n<p>함수의 파라미터가 배열일때 Destructuring</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> third<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>third<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> members <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'유재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'하하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'정준하'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'박명수'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 유재석</span>\n<span class=\"token comment\">// 하하</span>\n<span class=\"token comment\">// 정형돈</span>\n<span class=\"token comment\">// ['정준하', '박명수']</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>함수의 파라미터가 객체일때 Destructuring</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> win <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  title<span class=\"token operator\">:</span> <span class=\"token string\">'HP Desktop'</span><span class=\"token punctuation\">,</span>\n  price<span class=\"token operator\">:</span> <span class=\"token number\">700000</span><span class=\"token punctuation\">,</span>\n  memory<span class=\"token operator\">:</span> <span class=\"token string\">'16GB'</span><span class=\"token punctuation\">,</span>\n  storage<span class=\"token operator\">:</span> <span class=\"token string\">'1TB SSD'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">printProduct</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> memory <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title: '</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'price: '</span><span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'memory: '</span><span class=\"token punctuation\">,</span> memory<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printProduct</span><span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// title:  HP Desktop</span>\n<span class=\"token comment\">// price:  700000</span>\n<span class=\"token comment\">// memory:  16GB</span></code></pre></div>\n</li>\n</ul>\n<br>\n<br>\n<h2 id=\"6-에러와-에러-객체\" style=\"position:relative;\"><a href=\"#6-%EC%97%90%EB%9F%AC%EC%99%80-%EC%97%90%EB%9F%AC-%EA%B0%9D%EC%B2%B4\" aria-label=\"6 에러와 에러 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 에러와 에러 객체</h2>\n<blockquote>\n<p>Javascript에서 에러는 에러의 name 과 message로 구분된다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SyntaxError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'문법 에러가 발생했습니다.'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// SyntaxError</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 문법 에러가 발생했습니다.</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'End'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// End</span></code></pre></div>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">throw</code> 키워를 이용한 Error 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> error <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SyntaxError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'문법 에러가 발생했습니다.'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// SyntaxError</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 문법 에러가 발생했습니다.</span>\n\n<span class=\"token keyword\">throw</span> error<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  Uncaught SyntaxError: 문법 에러가 발생했습니다.</span>\n\n<span class=\"token comment\">// Error가 발생하여 console() 실행되지 않는다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'End'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"try-catch-문\" style=\"position:relative;\"><a href=\"#try-catch-%EB%AC%B8\" aria-label=\"try catch 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>try catch 문</h3>\n<ul>\n<li>\n<p>사용법</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 코드</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 에러가 발생했을 떄 동작할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Before Error'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'adam'</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\n\t\n  name <span class=\"token operator\">=</span> <span class=\"token string\">'eve'</span>  <span class=\"token comment\">// 재할당으로인한 에러발생</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 위의 에러발생으로 실행되지 않는다.</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 위의 에러 발생으로 실행되어짐</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After Error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 에러 발생</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// Error객체 프린트</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Before Error</span>\n<span class=\"token comment\">// adam</span>\n<span class=\"token comment\">// After Error</span>\n<span class=\"token comment\">// TypeError: Assignment to constant variable. (ERROR)</span>\n<span class=\"token comment\">// TypeError: Assignment to constant variable.</span></code></pre></div>\n</li>\n</ul>\n<br>\n<h3 id=\"try-catch-문의-활용\" style=\"position:relative;\"><a href=\"#try-catch-%EB%AC%B8%EC%9D%98-%ED%99%9C%EC%9A%A9\" aria-label=\"try catch 문의 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Try Catch 문의 활용</h3>\n<blockquote>\n<p>Error가 발생하면 프로그램이 중단되지만 try catch문을 이용하여 프로그램의 중단 없이 에러를 다룰 수 있다.</p>\n</blockquote>\n<ul>\n<li>\n<p>에러 발생으로 인한 프로그램 중단</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">members</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> member <span class=\"token keyword\">of</span> members<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> membersA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'혜정'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'지혜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조민'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersA<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 객체를 printRank함수에 아규먼트로 실행하여 Error 발생</span>\n<span class=\"token keyword\">const</span> membersB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'하하'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersB<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 위의 에러발생으로 실행되지 않음</span>\n<span class=\"token keyword\">const</span> membersC <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'길동'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'철민'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조준'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersC<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 혜정</span>\n<span class=\"token comment\">// 지혜</span>\n<span class=\"token comment\">// 조민</span>\n<span class=\"token comment\">// Uncaught TypeError: members is not iterable</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">try catch</code> 문을 이용하여 프로그램 중단 없이 Error Handling</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">members</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> member <span class=\"token keyword\">of</span> members<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> membersA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'혜정'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'지혜'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조민'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersA<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> membersB <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'하하'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersB<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> membersC <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'길동'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'철민'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조준'</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">printRank</span><span class=\"token punctuation\">(</span>membersC<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 혜정</span>\n<span class=\"token comment\">// 지혜</span>\n<span class=\"token comment\">// 조민</span>\n<span class=\"token comment\">// TypeError</span>\n<span class=\"token comment\">// members is not iterable</span>\n<span class=\"token comment\">// 길동</span>\n<span class=\"token comment\">// 철민</span>\n<span class=\"token comment\">// 조준</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p><code class=\"language-text\">try catch</code> 문은 중괄호 <code class=\"language-text\">{}</code> 안에서만 변수선언이 유효하기 때문에 변수 스코프를 잘 생각해야된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'apple'</span> <span class=\"token comment\">// try 문에서만 title 변수가 유효</span>\n  title <span class=\"token operator\">=</span> <span class=\"token string\">'af'</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Uncaught ReferenceError: title is not defined</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<br>\n<ul>\n<li><code class=\"language-text\">try catch</code> 문은 실행이가능한 코드에서만 작동한다.(SyntaxError는 실행이 되기전 에러가 발생되기 때문에 <code class=\"language-text\">try catch</code> 문은 작동되지 않는다)</li>\n<li><strong>예외처리 (Exception Handling)</strong> : 실행 가능한 코드에서 예외처리하는 것</li>\n</ul>\n<br>\n<h3 id=\"finally-문\" style=\"position:relative;\"><a href=\"#finally-%EB%AC%B8\" aria-label=\"finally 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>finally 문</h3>\n<blockquote>\n<p>finally문은 try문에서 에러가 발생해도 발생하지 않아도 항상 실행되는 구문이다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 실행할 코드</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 에러가 발생했을 때 동작 코드</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 항상 실행할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<ul>\n<li>\n<p>finally문에서 에러가 발생했을 시 에러 처리</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 실행할 코드</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 에러가 발상했을 때 실행할 코드</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 항상 실행할 코드</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// finall문에서 에러가 발생했을 때 실행할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%9E%A5statements-%EA%B3%BC-%ED%91%9C%ED%98%84%EC%8B%9Dexpressions\">1. 문장(Statements) 과 표현식(Expressions)</a></p>\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%9E%A5statements\">문장(Statements)</a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D\">표현식</a></li>\n<li><a href=\"#%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B8-%EB%AC%B8%EC%9E%A5-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%AC%B8%EC%9E%A5\">표현식인 문장 Vs 표현식이 아닌 문장</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\">2. 조건 연산자</a></p>\n<ul>\n<li><a href=\"#%EC%82%BC%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90\">삼항 연산자</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3--spread-%EA%B5%AC%EB%AC%B8\">3.  Spread 구문</a></p>\n<ul>\n<li><a href=\"#%EA%B0%9D%EC%B2%B4-spread\">객체 Spread</a></li>\n<li><a href=\"#%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\">주의 사항</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%AA%A8%EB%8D%98%ED%95%9C-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%91%9C%EA%B8%B0%EB%B2%95\">모던한 프로퍼티 표기법</a></p>\n<ul>\n<li><a href=\"#%EC%98%B5%EC%85%94%EB%84%90-%EC%B2%B4%EC%9D%B4%EB%8B%9D-optional-chaining\">옵셔널 체이닝 (Optional Chaining)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#5-%EA%B5%AC%EC%A1%B0-%EB%B6%84%ED%95%B4-destructuring\">5. 구조 분해 (Destructuring)</a></p>\n<ul>\n<li><a href=\"#1-%EB%B0%B0%EC%97%B4\">1. 배열</a></li>\n<li><a href=\"#2-%EA%B0%9D%EC%B2%B4-%EB%B6%84%ED%95%B4\">2. 객체 분해</a></li>\n<li><a href=\"#3-%ED%95%A8%EC%88%98%EC%99%80-destructuring\">3. 함수와 Destructuring</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#6-%EC%97%90%EB%9F%AC%EC%99%80-%EC%97%90%EB%9F%AC-%EA%B0%9D%EC%B2%B4\">6. 에러와 에러 객체</a></p>\n<ul>\n<li><a href=\"#try-catch-%EB%AC%B8\">try catch 문</a></li>\n<li><a href=\"#try-catch-%EB%AC%B8%EC%9D%98-%ED%99%9C%EC%9A%A9\">Try Catch 문의 활용</a></li>\n<li><a href=\"#finally-%EB%AC%B8\">finally 문</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 07, 2021","title":"JavaScript - 문장(Statements)과 표현식(Expressions)","categories":"javascript","author":"Daehwi Kim","emoji":"⭐"},"fields":{"slug":"/javascript-statement/"}},"site":{"siteMetadata":{"siteUrl":"https://kdh92417.github.io","comments":{"utterances":{"repo":"kdh92417/kdh92417.github.io"}}}}},"pageContext":{"slug":"/modern-javascript-2/","nextSlug":"/modern-javascript-1/","prevSlug":"/javascript-statement/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}